{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/nurse/SearchPatient.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\n\nfunction SearchPatient(props) {\n  const [screen, setScreen] = useState('auth');\n  const [showLoading, setShowLoading] = useState(false); //check if the user already logged-in\n\n  const readCookie = async () => {\n    try {\n      console.log('--- in readCookie function ---'); //\n\n      const res = await axios.get('/read_cookie'); // \n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  }; //runs the first time the view is rendered\n  //to check if user is signed in\n\n\n  useEffect(() => {\n    readCookie();\n  }, []); //only the first render\n\n  const searchPatient = e => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = {\n      usertype: user.usertype,\n      firstname: user.firstname,\n      lastname: user.lastname,\n      username: user.username,\n      email: user.email,\n      password: user.password,\n      phoneNumber: user.phoneNumber,\n      address: user.address,\n      city: user.city,\n      postalCode: user.postalCode,\n      dateOfbirth: user.dateOfbirth\n    };\n    axios.post(apiUrl, data).then(result => {\n      setShowLoading(false);\n      props.history.push('/' + result.data._id);\n    }).catch(error => setShowLoading(false));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, showLoading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Loading...\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Search Patient: \", screen), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: searchPatient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"searchType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dateOfBirth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Date Of Birth\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"searchStr\",\n    id: \"searchStr\",\n    value: \"\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default withRouter(SearchPatient);","map":{"version":3,"sources":["/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/nurse/SearchPatient.js"],"names":["React","useState","useEffect","withRouter","axios","Spinner","SearchPatient","props","screen","setScreen","showLoading","setShowLoading","readCookie","console","log","res","get","data","undefined","e","searchPatient","preventDefault","usertype","user","firstname","lastname","username","email","password","phoneNumber","address","city","postalCode","dateOfbirth","post","apiUrl","then","result","history","push","_id","catch","error","onChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,MAAD,CAApC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C,CAF0B,CAI1B;;AACA,QAAMW,UAAU,GAAG,YAAY;AAC3B,QAAI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EADA,CAGA;;AACA,YAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,cAAV,CAAlB,CAJA,CAKA;;AACA,UAAID,GAAG,CAACE,IAAJ,CAAST,MAAT,KAAoBU,SAAxB,EAAmC;AAC/BT,QAAAA,SAAS,CAACM,GAAG,CAACE,IAAJ,CAAST,MAAV,CAAT;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACE,IAAJ,CAAST,MAArB;AACH;AACJ,KAVD,CAUE,OAAOW,CAAP,EAAU;AACRV,MAAAA,SAAS,CAAC,MAAD,CAAT;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ;AACH;AACJ,GAfD,CAL0B,CAqB1B;AACA;;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT,CAvB0B,CAyBlB;;AAGR,QAAMQ,aAAa,GAAID,CAAD,IAAO;AACzBR,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAQ,IAAAA,CAAC,CAACE,cAAF;AACA,UAAMJ,IAAI,GAAG;AACTK,MAAAA,QAAQ,EAAEC,IAAI,CAACD,QADN;AAETE,MAAAA,SAAS,EAAED,IAAI,CAACC,SAFP;AAGTC,MAAAA,QAAQ,EAAEF,IAAI,CAACE,QAHN;AAITC,MAAAA,QAAQ,EAAEH,IAAI,CAACG,QAJN;AAKTC,MAAAA,KAAK,EAAEJ,IAAI,CAACI,KALH;AAMTC,MAAAA,QAAQ,EAAEL,IAAI,CAACK,QANN;AAOTC,MAAAA,WAAW,EAAEN,IAAI,CAACM,WAPT;AAQTC,MAAAA,OAAO,EAAEP,IAAI,CAACO,OARL;AASTC,MAAAA,IAAI,EAAER,IAAI,CAACQ,IATF;AAUTC,MAAAA,UAAU,EAAET,IAAI,CAACS,UAVR;AAWTC,MAAAA,WAAW,EAAEV,IAAI,CAACU;AAXT,KAAb;AAeA7B,IAAAA,KAAK,CAAC8B,IAAN,CAAWC,MAAX,EAAmBlB,IAAnB,EAAyBmB,IAAzB,CAA+BC,MAAD,IAAY;AACtC1B,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAJ,MAAAA,KAAK,CAAC+B,OAAN,CAAcC,IAAd,CAAmB,MAAMF,MAAM,CAACpB,IAAP,CAAYuB,GAArC;AACH,KAHD,EAGGC,KAHH,CAGUC,KAAD,IAAW/B,cAAc,CAAC,KAAD,CAHlC;AAIH,GAtBD;;AAwBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKD,WAAW,iBACR,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAHR,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqBF,MAArB,CARJ,eAUI;AAAM,IAAA,QAAQ,EAAEY,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAQ,IAAA,EAAE,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,eAKI;AAAQ,IAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,CAFJ,eAUI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,WAAxB;AAAoC,IAAA,EAAE,EAAC,WAAvC;AAAmD,IAAA,KAAK,EAAC,EAAzD;AAA4D,IAAA,QAAQ,EAAEuB,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CAVJ,CADJ;AA2BH;;AAED,eAAexC,UAAU,CAACG,aAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\n\nfunction SearchPatient(props) {\n    const [screen, setScreen] = useState('auth');\n    const [showLoading, setShowLoading] = useState(false);\n\n    //check if the user already logged-in\n    const readCookie = async () => {\n        try {\n            console.log('--- in readCookie function ---');\n\n            //\n            const res = await axios.get('/read_cookie');\n            // \n            if (res.data.screen !== undefined) {\n                setScreen(res.data.screen);\n                console.log(res.data.screen)\n            }\n        } catch (e) {\n            setScreen('auth');\n            console.log(e);\n        }\n    };\n    //runs the first time the view is rendered\n    //to check if user is signed in\n    useEffect(() => {\n        readCookie();\n    }, []); //only the first render\n\n\n    const searchPatient = (e) => {\n        setShowLoading(true);\n        e.preventDefault();\n        const data = {\n            usertype: user.usertype,\n            firstname: user.firstname,\n            lastname: user.lastname,\n            username: user.username,\n            email: user.email,\n            password: user.password,\n            phoneNumber: user.phoneNumber,\n            address: user.address,\n            city: user.city,\n            postalCode: user.postalCode,\n            dateOfbirth: user.dateOfbirth\n\n        };\n\n        axios.post(apiUrl, data).then((result) => {\n            setShowLoading(false);\n            props.history.push('/' + result.data._id)\n        }).catch((error) => setShowLoading(false));\n    };\n\n    return (\n        <div>\n\n            {showLoading &&\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            }\n\n            <h2>Search Patient: {screen}</h2>\n\n            <form onSubmit={searchPatient}>\n\n                <select id=\"searchType\">\n                    <option value=\"id\">ID</option>\n                    <option value=\"firstName\">First Name</option>\n                    <option value=\"lastName\">Last Name</option>\n                    <option value=\"email\">Email Address</option>\n                    <option value=\"dateOfBirth\">Date Of Birth</option>\n                </select>\n\n                <input type=\"text\" name=\"searchStr\" id=\"searchStr\" value=\"\" onChange={onChange} />\n            </form>\n\n        </div>\n    );\n\n}\n\nexport default withRouter(SearchPatient);"]},"metadata":{},"sourceType":"module"}