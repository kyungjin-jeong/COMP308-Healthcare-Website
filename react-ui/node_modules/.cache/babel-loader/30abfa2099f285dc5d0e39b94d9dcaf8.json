{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\tb\\\\COMP308-Healthcare-Website\\\\react-ui\\\\src\\\\components\\\\patient\\\\CreateEmergencyAlert.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\n\nfunction CreateEmergencyAlert(props) {\n  const [emergency, setEmergency] = useState({\n    _id: '',\n    emergencyCode: '',\n    emergencySubject: '',\n    description: '',\n    contactName: '',\n    contactNumber: '',\n    status: ''\n  });\n  const [showLoading, setShowLoading] = useState(false);\n  const apiUrl = \"http://localhost:3000/emergency/\" + props.match.params.email;\n\n  const saveEmergency = e => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = {\n      emergencyCode: emergency.emergencyCode,\n      emergencySubject: emergency.emergencySubject,\n      description: emergency.description,\n      contactName: emergency.contactName,\n      contactNumber: emergency.contactNumber,\n      creationTime: Date.now,\n      status: \"Active\"\n    };\n    axios.post(apiUrl, data).then(result => {\n      setShowLoading(false);\n      props.history.push('/emergencies/');\n    }).catch(error => setShowLoading(false));\n  };\n\n  const onChange = e => {\n    e.persist();\n    setEmergency({ ...emergency,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, showLoading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Loading...\")), /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, \"Emergency Alert! \", props.match.params.email), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: saveEmergency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \" Emergency Code\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"emergencyCode\",\n    id: \"emergencyCode\",\n    placeholder: \"Enter emergency code\",\n    value: emergency.emergencyCode,\n    onChange: onChange,\n    style: {\n      width: 700\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \" Emeregncy Subject\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"emergencySubject\",\n    id: \"emergencySubject\",\n    placeholder: \"Enter emergency subject\",\n    value: emergency.emergencySubject,\n    onChange: onChange,\n    style: {\n      width: 700\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Emergency Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"description\",\n    id: \"description\",\n    placeholder: \"Enter description\",\n    value: emergency.description,\n    onChange: onChange,\n    style: {\n      width: 700\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Contact Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"contactName\",\n    id: \"contactName\",\n    placeholder: \"Enter contact name\",\n    value: emergency.contactName,\n    onChange: onChange,\n    style: {\n      width: 700\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Contact Number\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"contactNumber\",\n    id: \"contactNumber\",\n    placeholder: \"Enter contact number\",\n    value: emergency.contactNumber,\n    onChange: onChange,\n    style: {\n      width: 700\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    style: {\n      width: 700,\n      marginTop: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Send Emergency Alert\"))));\n}\n\nexport default withRouter(CreateEmergencyAlert);","map":{"version":3,"sources":["C:/Users/HP/Documents/GitHub/tb/COMP308-Healthcare-Website/react-ui/src/components/patient/CreateEmergencyAlert.js"],"names":["React","useState","useEffect","axios","Spinner","Jumbotron","Form","Button","withRouter","CreateEmergencyAlert","props","emergency","setEmergency","_id","emergencyCode","emergencySubject","description","contactName","contactNumber","status","showLoading","setShowLoading","apiUrl","match","params","email","saveEmergency","e","preventDefault","data","creationTime","Date","now","post","then","result","history","push","catch","error","onChange","persist","target","name","value","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction CreateEmergencyAlert(props) {\r\n  const [emergency, setEmergency] = useState({ _id: '', emergencyCode: '', emergencySubject: '', \r\n  description: '', contactName: '', contactNumber: '', status: ''});\r\n  const [showLoading, setShowLoading] = useState(false);\r\n  const apiUrl = \"http://localhost:3000/emergency/\"+ props.match.params.email;\r\n\r\n  const saveEmergency = (e) => {\r\n    setShowLoading(true);\r\n    e.preventDefault();\r\n    const data = { emergencyCode: emergency.emergencyCode, \r\n        emergencySubject: emergency.emergencySubject, \r\n        description: emergency.description,\r\n        contactName: emergency.contactName,\r\n        contactNumber: emergency.contactNumber,\r\n        creationTime: Date.now,\r\n        status: \"Active\",\r\n     };\r\n    axios.post(apiUrl, data)\r\n      .then((result) => {\r\n        setShowLoading(false);\r\n        props.history.push('/emergencies/')\r\n      }).catch((error) => setShowLoading(false));\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    e.persist();\r\n    setEmergency({...emergency, [e.target.name]: e.target.value});\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showLoading && \r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner> \r\n      } \r\n      <Jumbotron>\r\n    <h2>Emergency Alert! {props.match.params.email}</h2>\r\n        <Form onSubmit={saveEmergency}>\r\n          <Form.Group>\r\n            <Form.Label> Emergency Code</Form.Label>\r\n            <Form.Control type=\"text\" name=\"emergencyCode\" id=\"emergencyCode\" placeholder=\"Enter emergency code\" value={emergency.emergencyCode} onChange={onChange} style={{width: 700 }}/>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label> Emeregncy Subject</Form.Label>\r\n            <Form.Control type=\"text\" name=\"emergencySubject\" id=\"emergencySubject\" placeholder=\"Enter emergency subject\" value={emergency.emergencySubject} onChange={onChange} style={{width: 700 }}/>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Emergency Description</Form.Label>\r\n            <Form.Control type=\"text\" name=\"description\" id=\"description\"  placeholder=\"Enter description\" value={emergency.description} onChange={onChange} style={{width: 700}}/>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Contact Name</Form.Label>\r\n            <Form.Control type=\"text\" name=\"contactName\" id=\"contactName\" placeholder=\"Enter contact name\" value={emergency.contactName} onChange={onChange} style={{width: 700 }}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Contact Number</Form.Label>\r\n            <Form.Control type=\"text\" name=\"contactNumber\" id=\"contactNumber\" placeholder=\"Enter contact number\" value={emergency.contactNumber} onChange={onChange} style={{width: 700 }}/>\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\" style={{width: 700, marginTop: 30 }}>\r\n            Send Emergency Alert\r\n          </Button>\r\n        </Form>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(CreateEmergencyAlert);"]},"metadata":{},"sourceType":"module"}