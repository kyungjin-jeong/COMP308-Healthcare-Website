{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/Registration.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { withRouter } from 'react-router-dom';\nimport './Registration.css';\n\nfunction Registration(props) {\n  const [user, setUser] = useState({\n    _id: '',\n    usertype: '',\n    password: '',\n    name: '',\n    username: '',\n    address: '',\n    city: '',\n    postalCode: '',\n    phoneNumber: '',\n    email: ''\n  });\n  const [valid, setValidation] = useState({\n    ispasswordValid: false,\n    isnameVaild: false,\n    isusernameValid: false,\n    isaddressValid: false,\n    iscityVaild: false,\n    ispostalCodeValid: false,\n    isphoneNumberVaild: false,\n    isEmailValid: false\n  });\n  const [showLoading, setShowLoading] = useState(false);\n  const apiUrl = \"http://localhost:3000/\";\n\n  const saveUser = e => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = {\n      usertype: user.usertype,\n      name: user.name,\n      username: user.username,\n      email: user.email,\n      password: user.password,\n      phoneNumber: user.phoneNumber,\n      address: user.address,\n      city: user.city,\n      postalCode: user.postalCode\n    };\n    axios.post(apiUrl, data).then(result => {\n      setShowLoading(false);\n      props.history.push('/' + result.data._id);\n    }).catch(error => setShowLoading(false));\n  };\n\n  const onChange = e => {\n    // e.persist();\n    if (e.target.name === 'name') {\n      if (e.target.value.length > 1) {\n        setValidation({\n          isnameVaild: true\n        });\n        setUser({\n          name: e.target.valid\n        });\n      } else {\n        setValidation({\n          isnameVaild: false\n        });\n      }\n    }\n\n    console.log(e.target.value);\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validateEmail = e => {\n    const emailRegExp = /^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/;\n\n    if (e.target.value.match(emailRegExp)) {\n      setValidation({\n        isEmailValid: true\n      });\n    } else {\n      setValidation({\n        isEmailValid: false\n      });\n    }\n\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validatePhoneNumber = e => {\n    const phoneNumberRegExp = /^\\d{3}-\\d{3}-\\d{4}$/;\n\n    if (e.target.value.match(phoneNumberRegExp)) {\n      setValidation({\n        isphoneNumberVaild: true\n      });\n    } else {\n      setValidation({\n        isphoneNumberVaild: false\n      });\n    }\n\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validatePassword = e => {\n    if (e.target.value.length > 3) {\n      setValidation({\n        ispasswordValid: true\n      });\n    } else {\n      setValidation({\n        ispasswordValid: false\n      });\n    }\n\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validateUsername = e => {\n    if (e.target.value.length > 3) {\n      setValidation({\n        isusernameVaild: true\n      });\n    } else {\n      setValidation({\n        isusernameVaild: false\n      });\n    }\n\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validateAddress = e => {\n    if (e.target.value.length > 7) {\n      setValidation({\n        isaddressValid: true\n      });\n    } else {\n      setValidation({\n        isaddressValid: false\n      });\n    }\n\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validateCity = e => {\n    if (e.target.value.length > 1) {\n      setValidation({\n        iscityVaild: true\n      });\n    } else {\n      setValidation({\n        iscityVaild: false\n      });\n    }\n\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validatePostalCode = e => {\n    if (e.target.value.length > 5) {\n      setValidation({\n        ispostalCodeValid: true\n      });\n    } else {\n      setValidation({\n        ispostalCodeValid: false\n      });\n    }\n\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const isEnteredNameValid = () => {\n    if (user.name) return valid.isnameVaild;\n  };\n\n  const isEnteredUserNameValid = () => {\n    if (user.username) return valid.isusernameVaild;\n  };\n\n  const isEnteredEmailValid = () => {\n    if (user.email) return valid.isEmailValid;\n  };\n\n  const isEnteredPasswordValid = () => {\n    if (user.password) return valid.ispasswordValid;\n  };\n\n  const isEnteredPhoneValid = () => {\n    if (user.phoneNumber) return valid.isphoneNumberVaild;\n  };\n\n  const isEnteredAddressValid = () => {\n    if (user.address) return valid.isaddressValid;\n  };\n\n  const isEnteredCityValid = () => {\n    if (user.city) return valid.iscityVaild;\n  };\n\n  const isEnteredPostalValid = () => {\n    if (user.postalCode) return valid.ispostalCodeValid;\n  };\n\n  const inputClassNameHelper = boolean => {\n    switch (boolean) {\n      case true:\n        return 'is-valid';\n\n      case false:\n        return 'is-invalid';\n\n      default:\n        return '';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, showLoading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, \"Loading...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \" Create a New Account  \"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, \" Come join our Hero health! Let's set up your account.\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"signUpForm\",\n    onSubmit: saveUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-group\",\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 22\n    }\n  }, \"User Type\"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" col-sm-2 form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    name: \"usertype\",\n    type: \"radio\",\n    id: \"inlineCheckbox1\",\n    value: \"nurse\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    for: \"inlineCheckbox1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  }, \"Nurse\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-2 form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    name: \"usertype\",\n    type: \"radio\",\n    id: \"inlineCheckbox1\",\n    value: \"patient\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    for: \"inlineCheckbox1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }, \"Patient\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control ${inputClassNameHelper(isEnteredNameValid())}`,\n    id: \"name\",\n    name: \"name\",\n    value: user.name,\n    placeholder: \"Full name\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control ${inputClassNameHelper(isEnteredUserNameValid())}`,\n    id: \"username\",\n    name: \"username\",\n    value: user.username,\n    placeholder: \"Username for signin\",\n    onChange: validateUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: `form-control ${inputClassNameHelper(isEnteredEmailValid())}`,\n    id: \"emailInput\",\n    \"aria-describedby\": \"emailHelp\",\n    placeholder: \"abc@gmail.com\",\n    name: \"email\",\n    value: user.email,\n    onChange: validateEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: `form-control ${inputClassNameHelper(isEnteredPasswordValid())}`,\n    id: \"passwordInput\",\n    placeholder: \"Please use strong password\",\n    name: \"password\",\n    value: user.password,\n    onChange: validatePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"phoneNumberInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 25\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control ${inputClassNameHelper(isEnteredPhoneValid())}`,\n    id: \"phoneNumberInput\",\n    placeholder: \"ex)416-1234-1234\",\n    name: \"phoneNumber\",\n    value: user.phoneNumber,\n    onChange: validatePhoneNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control ${inputClassNameHelper(isEnteredAddressValid())}`,\n    id: \"passwordInput\",\n    placeholder: \"ex)941 Progree Ave\",\n    name: \"address\",\n    value: user.address,\n    onChange: validateAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-md-2\",\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control col-md-5 ${inputClassNameHelper(isEnteredCityValid())}`,\n    id: \"cityInput\",\n    placeholder: \"ex)Scarborough\",\n    name: \"city\",\n    value: user.city,\n    onChange: validateCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-md-2\",\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 25\n    }\n  }, \"Postal Code\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control col-md-3  ${inputClassNameHelper(isEnteredPostalValid())}`,\n    id: \"postalCodeInput\",\n    placeholder: \" M1G 3T8\",\n    name: \"postalCode\",\n    value: user.postalCode,\n    onChange: validatePostalCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n}\n\nexport default withRouter(Registration);","map":{"version":3,"sources":["/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/Registration.js"],"names":["React","useState","useEffect","axios","Spinner","withRouter","Registration","props","user","setUser","_id","usertype","password","name","username","address","city","postalCode","phoneNumber","email","valid","setValidation","ispasswordValid","isnameVaild","isusernameValid","isaddressValid","iscityVaild","ispostalCodeValid","isphoneNumberVaild","isEmailValid","showLoading","setShowLoading","apiUrl","saveUser","e","preventDefault","data","post","then","result","history","push","catch","error","onChange","target","value","length","console","log","validateEmail","emailRegExp","match","validatePhoneNumber","phoneNumberRegExp","validatePassword","validateUsername","isusernameVaild","validateAddress","validateCity","validatePostalCode","isEnteredNameValid","isEnteredUserNameValid","isEnteredEmailValid","isEnteredPasswordValid","isEnteredPhoneValid","isEnteredAddressValid","isEnteredCityValid","isEnteredPostalValid","inputClassNameHelper","boolean"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { withRouter } from 'react-router-dom';\n\nimport './Registration.css'\n\n\nfunction Registration(props) {\n    const [user, setUser]\n        = useState({\n            _id: '',\n            usertype: '',\n            password: '',\n            name: '',\n            username: '',\n            address: '',\n            city: '',\n            postalCode: '',\n            phoneNumber: '',\n            email: '',\n        });\n\n    const [valid, setValidation]\n        = useState({\n            ispasswordValid: false,\n            isnameVaild: false,\n            isusernameValid:false,\n            isaddressValid: false,\n            iscityVaild: false,\n            ispostalCodeValid: false,\n            isphoneNumberVaild: false,\n            isEmailValid: false\n        });\n    const [showLoading, setShowLoading] = useState(false);\n    const apiUrl = \"http://localhost:3000/\";\n\n    const saveUser = (e) => {\n        setShowLoading(true);\n        e.preventDefault();\n        const data = {\n            usertype: user.usertype,\n            name: user.name,\n            username:user.username,\n            email: user.email,\n            password: user.password,\n            phoneNumber: user.phoneNumber,\n            address: user.address,\n            city: user.city,\n            postalCode: user.postalCode\n\n        };\n\n        axios.post(apiUrl, data)\n            .then((result) => {\n                setShowLoading(false);\n                props.history.push('/' + result.data._id)\n            }).catch((error) => setShowLoading(false));\n    };\n\n\n    const onChange = (e) => {\n        // e.persist();\n        if (e.target.name === 'name') {\n            if (e.target.value.length > 1) {\n                setValidation({ isnameVaild: true })\n                setUser({ name: e.target.valid })\n               \n            }\n            else {\n                setValidation({ isnameVaild: false })\n            }\n        } console.log(e.target.value)\n        setUser({ ...user, [e.target.name]: e.target.value });\n    }\n\n    const validateEmail = (e) => {\n        const emailRegExp = /^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/;\n      \n        if (e.target.value.match(emailRegExp)) {\n            setValidation({ isEmailValid: true })\n        } else {\n            setValidation({ isEmailValid: false })\n        }setUser({ ...user, [e.target.name]: e.target.value });\n      };\n\n      const validatePhoneNumber = (e) => {\n        const phoneNumberRegExp = /^\\d{3}-\\d{3}-\\d{4}$/;\n      \n        if (e.target.value.match(phoneNumberRegExp)) {\n            setValidation({ isphoneNumberVaild: true })\n        } else {\n            setValidation({ isphoneNumberVaild: false })\n        }setUser({ ...user, [e.target.name]: e.target.value });\n      };\n      const validatePassword = (e) => {\n        if (e.target.value.length > 3) {\n            setValidation({ ispasswordValid: true })\n        } else {\n            setValidation({ ispasswordValid: false })\n        }\n        setUser({ ...user, [e.target.name]: e.target.value });\n    };\n    const validateUsername = (e) => {\n        if (e.target.value.length > 3) {\n            setValidation({ isusernameVaild: true })\n        } else {\n            setValidation({ isusernameVaild: false })\n        }\n        setUser({ ...user, [e.target.name]: e.target.value });\n    };\n    const validateAddress = (e) => {\n        if (e.target.value.length > 7) {\n            setValidation({ isaddressValid: true })\n        } else {\n            setValidation({ isaddressValid: false })\n        }\n        setUser({ ...user, [e.target.name]: e.target.value });\n    };\n    const validateCity = (e) => {\n        if (e.target.value.length > 1) {\n            setValidation({ iscityVaild: true })\n        } else {\n            setValidation({ iscityVaild: false })\n        }\n        setUser({ ...user, [e.target.name]: e.target.value });\n    };\n    const validatePostalCode = (e) => {\n        if (e.target.value.length > 5) {\n            setValidation({ ispostalCodeValid: true })\n        } else {\n            setValidation({ ispostalCodeValid: false })\n        }\n        setUser({ ...user, [e.target.name]: e.target.value });\n    };\n\n    const isEnteredNameValid = () => {if (user.name) return valid.isnameVaild;};\n    const isEnteredUserNameValid = () => {if (user.username) return valid.isusernameVaild;};\n    const isEnteredEmailValid = () => {if (user.email) return valid.isEmailValid;};\n    const isEnteredPasswordValid = () => {if (user.password) return valid.ispasswordValid;};\n    const isEnteredPhoneValid = () => {if (user.phoneNumber) return valid.isphoneNumberVaild;};\n    const isEnteredAddressValid = () => {if (user.address) return valid.isaddressValid;};\n    const isEnteredCityValid = () => {if (user.city) return valid.iscityVaild; };\n    const isEnteredPostalValid = () => {if (user.postalCode) return valid.ispostalCodeValid;};\n\n    const inputClassNameHelper = boolean => {\n        switch (boolean) {\n            case true:\n                return 'is-valid';\n            case false:\n                return 'is-invalid';\n            default:\n                return '';\n        }\n    };\n\n    return (\n        <div>\n            {showLoading &&\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            }\n\n            <div className=\"App\">\n                <br></br>\n                <h2> Create a New Account  </h2>\n                <h4> Come join our Hero health! Let's set up your account.</h4>\n\n                <form className=\"signUpForm\" onSubmit={saveUser}>\n                <div><label className=\"form-group\" htmlFor=\"\">User Type</label> </div>\n                    <div className=\"form-control\">\n                        <div className=\" col-sm-2 form-check form-check-inline\">\n                            <input className=\"form-check-input\" name=\"usertype\" type=\"radio\" id=\"inlineCheckbox1\" value=\"nurse\" onChange={onChange} />\n                            <label className=\"form-check-label\" for=\"inlineCheckbox1\">Nurse</label>\n                        </div>\n                        <div className=\"col-sm-2 form-check form-check-inline\">\n                            <input className=\"form-check-input\" name=\"usertype\" type=\"radio\" id=\"inlineCheckbox1\" value=\"patient\" onChange={onChange} />\n                            <label className=\"form-check-label\" for=\"inlineCheckbox1\">Patient</label>\n                        </div> \n                    </div><br></br>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input\n                            type=\"text\"\n                            className={`form-control ${inputClassNameHelper(isEnteredNameValid())}`}\n                            id=\"name\"\n                            name=\"name\"\n                            value={user.name}\n                            placeholder=\"Full name\"\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"name\">Username</label>\n                        <input\n                            type=\"text\"\n                            className={`form-control ${inputClassNameHelper(isEnteredUserNameValid())}`}\n                            id=\"username\"\n                            name=\"username\"\n                            value={user.username}\n                            placeholder=\"Username for signin\"\n                            onChange={validateUsername}\n                        />\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"emailInput\">Email</label>\n                        <input\n                            type=\"email\"\n                            className={`form-control ${inputClassNameHelper(isEnteredEmailValid())}`}\n                            id=\"emailInput\"\n                            aria-describedby=\"emailHelp\"\n                            placeholder=\"abc@gmail.com\"\n                            name=\"email\"\n                            value={user.email}\n                            onChange={validateEmail}\n\n                        />\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"\">Password</label>\n                        <input\n                            type=\"password\"\n                            className={`form-control ${inputClassNameHelper(isEnteredPasswordValid())}`}\n                            id=\"passwordInput\"\n                            placeholder=\"Please use strong password\"\n                            name=\"password\"\n                            value={user.password}\n                            onChange={validatePassword}\n\n                        />\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"phoneNumberInput\">Phone Number</label>\n                        <input\n                            type=\"text\"\n                            className={`form-control ${inputClassNameHelper(isEnteredPhoneValid())}`}\n                            id=\"phoneNumberInput\"\n                            placeholder=\"ex)416-1234-1234\"\n                            name=\"phoneNumber\"\n                            value={user.phoneNumber}\n                            onChange={validatePhoneNumber}\n\n                        />\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"\">Address</label>\n                        <input\n                            type=\"text\"\n                            className={`form-control ${inputClassNameHelper(isEnteredAddressValid())}`}\n\n                            id=\"passwordInput\"\n                            placeholder=\"ex)941 Progree Ave\"\n                            name=\"address\"\n                            value={user.address}\n                            onChange={validateAddress}\n                        />\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-md-2\" htmlFor=\"\">City</label>\n                        <input\n                            type=\"text\"\n                            className={`form-control col-md-5 ${inputClassNameHelper(isEnteredCityValid())}`}\n\n                            id=\"cityInput\"\n                            placeholder=\"ex)Scarborough\"\n                            name=\"city\"\n                            value={user.city}\n                            onChange={validateCity}\n                        />\n\n                        <label className=\"col-md-2\" htmlFor=\"\">Postal Code</label>\n                        <input\n                            type=\"text\"\n                            className={`form-control col-md-3  ${inputClassNameHelper(isEnteredPostalValid())}`}\n\n                            id=\"postalCodeInput\"\n                            placeholder=\" M1G 3T8\"\n                            name=\"postalCode\"\n                            value={user.postalCode}\n                            onChange={validatePostalCode}\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                        Submit\n                     </button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Registration);\n"]},"metadata":{},"sourceType":"module"}