{"ast":null,"code":"var _jsxFileName = \"/Users/yeseul/workspace/COMP308-Healthcare-Website/react-ui/src/components/nurse/SearchPatient.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction SearchPatient(props) {\n  const [screen, setScreen] = useState('auth');\n  console.log('props.screen', props.screen); //check if the user already logged-in\n\n  const readCookie = async () => {\n    try {\n      console.log('--- in readCookie function ---'); //\n\n      const res = await axios.get('/read_cookie'); // \n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  }; //runs the first time the view is rendered\n  //to check if user is signed in\n\n\n  useEffect(() => {\n    readCookie();\n  }, []); //only the first render\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Search Patient: \", screen));\n}\n\nexport default withRouter(SearchPatient);","map":{"version":3,"sources":["/Users/yeseul/workspace/COMP308-Healthcare-Website/react-ui/src/components/nurse/SearchPatient.js"],"names":["React","useState","useEffect","withRouter","axios","SearchPatient","props","screen","setScreen","console","log","readCookie","res","get","data","undefined","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,MAAD,CAApC;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BJ,KAAK,CAACC,MAAjC,EAH0B,CAI5B;;AACA,QAAMI,UAAU,GAAG,YAAY;AAC7B,QAAI;AACFF,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EADE,CAGF;;AACA,YAAME,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,cAAV,CAAlB,CAJE,CAKF;;AACA,UAAID,GAAG,CAACE,IAAJ,CAASP,MAAT,KAAoBQ,SAAxB,EAAmC;AACjCP,QAAAA,SAAS,CAACI,GAAG,CAACE,IAAJ,CAASP,MAAV,CAAT;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACE,IAAJ,CAASP,MAArB;AACD;AACF,KAVD,CAUE,OAAOS,CAAP,EAAU;AACVR,MAAAA,SAAS,CAAC,MAAD,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ;AACD;AACF,GAfD,CAL4B,CAqB5B;AACA;;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT,CAvB4B,CAyBpB;;AAEN,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqBJ,MAArB,CADJ,CADJ;AAMH;;AAED,eAAeJ,UAAU,CAACE,aAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction SearchPatient(props) {\n    const [screen, setScreen] = useState('auth');\n\n    console.log('props.screen',props.screen);\n  //check if the user already logged-in\n  const readCookie = async () => {\n    try {\n      console.log('--- in readCookie function ---');\n\n      //\n      const res = await axios.get('/read_cookie');\n      // \n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen)\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  };\n  //runs the first time the view is rendered\n  //to check if user is signed in\n  useEffect(() => {\n    readCookie();\n  }, []); //only the first render\n\n    return (\n        <div>\n            <h2>Search Patient: {screen}</h2>\n        </div>\n    );\n\n}\n\nexport default withRouter(SearchPatient);"]},"metadata":{},"sourceType":"module"}