{"ast":null,"code":"var _jsxFileName = \"/Users/yeseul/workspace/COMP308-Healthcare-Website/react-ui/src/components/nurse/DetailPatientInfo.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction DetailPatientInfo(props) {\n  const [data, setData] = useState({});\n  const [screen, setScreen] = useState('auth');\n  const [patientUsername, setPatientUsername] = useState();\n  console.log('props.screen', props.screen);\n  const [showLoading, setShowLoading] = useState(false);\n  const apiUrl = \"http://localhost:3000/detailPatientInfo\" + props.match.params.id;\n  ;\n  useEffect(() => {\n    readCookie();\n    setShowLoading(false);\n\n    const fetchData = async () => {\n      axios.get(apiUrl).then(result => {\n        console.log('result.data:', result.data);\n      }).catch(error => {\n        console.log('error in fetchData:', error);\n      });\n    };\n\n    fetchData();\n  }, []); //check if the user already logged-in\n\n  const readCookie = async () => {\n    try {\n      console.log('--- in readCookie function ---'); //\n\n      const res = await axios.get('/read_cookie'); // \n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n        console.log(\"username\" + res.data.username);\n        setPatientUsername(res.data.username);\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Username: \", patientUsername));\n}\n\nexport default withRouter(DetailPatientInfo);","map":{"version":3,"sources":["/Users/yeseul/workspace/COMP308-Healthcare-Website/react-ui/src/components/nurse/DetailPatientInfo.js"],"names":["React","useState","useEffect","withRouter","axios","DetailPatientInfo","props","data","setData","screen","setScreen","patientUsername","setPatientUsername","console","log","showLoading","setShowLoading","apiUrl","match","params","id","readCookie","fetchData","get","then","result","catch","error","res","undefined","username","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,MAAD,CAApC;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,EAAtD;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BR,KAAK,CAACG,MAAlC;AAEA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMgB,MAAM,GAAG,4CAA4CX,KAAK,CAACY,KAAN,CAAYC,MAAZ,CAAmBC,EAA9E;AAAiF;AAGjFlB,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,UAAU;AACVL,IAAAA,cAAc,CAAC,KAAD,CAAd;;AACA,UAAMM,SAAS,GAAG,YAAY;AAC1BlB,MAAAA,KAAK,CAACmB,GAAN,CAAUN,MAAV,EACKO,IADL,CACUC,MAAM,IAAI;AACZZ,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BW,MAAM,CAAClB,IAAnC;AACH,OAHL,EAGOmB,KAHP,CAGcC,KAAD,IAAW;AAChBd,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCa,KAAnC;AACD,OALP;AAMK,KAPT;;AAQIL,IAAAA,SAAS;AACZ,GAZI,EAYF,EAZE,CAAT,CAX8B,CA0B9B;;AACA,QAAMD,UAAU,GAAG,YAAY;AAC3B,QAAI;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EADA,CAGA;;AACA,YAAMc,GAAG,GAAG,MAAMxB,KAAK,CAACmB,GAAN,CAAU,cAAV,CAAlB,CAJA,CAKA;;AACA,UAAIK,GAAG,CAACrB,IAAJ,CAASE,MAAT,KAAoBoB,SAAxB,EAAmC;AAC/BnB,QAAAA,SAAS,CAACkB,GAAG,CAACrB,IAAJ,CAASE,MAAV,CAAT;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYc,GAAG,CAACrB,IAAJ,CAASE,MAArB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAac,GAAG,CAACrB,IAAJ,CAASuB,QAAlC;AACAlB,QAAAA,kBAAkB,CAACgB,GAAG,CAACrB,IAAJ,CAASuB,QAAV,CAAlB;AACH;AACJ,KAZD,CAYE,OAAOC,CAAP,EAAU;AACRrB,MAAAA,SAAS,CAAC,MAAD,CAAT;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYiB,CAAZ;AACH;AACJ,GAjBD;;AAkBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAepB,eAAf,CADJ,CADJ;AAMH;;AAED,eAAeR,UAAU,CAACE,iBAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction DetailPatientInfo(props) {\n    const [data, setData] = useState({});\n    const [screen, setScreen] = useState('auth');\n    const [patientUsername, setPatientUsername] = useState();\n\n    console.log('props.screen', props.screen);\n\n    const [showLoading, setShowLoading] = useState(false);\n    const apiUrl = \"http://localhost:3000/detailPatientInfo\" + props.match.params.id;;\n\n\n    useEffect(() => {\n        readCookie();\n        setShowLoading(false);\n        const fetchData = async () => {\n            axios.get(apiUrl)\n                .then(result => {\n                    console.log('result.data:', result.data)\n                }).catch((error) => {\n                    console.log('error in fetchData:', error)\n                  });\n                };\n            fetchData();\n        }, []);\n\n\n    //check if the user already logged-in\n    const readCookie = async () => {\n        try {\n            console.log('--- in readCookie function ---');\n\n            //\n            const res = await axios.get('/read_cookie');\n            // \n            if (res.data.screen !== undefined) {\n                setScreen(res.data.screen);\n                console.log(res.data.screen)\n                console.log(\"username\" + res.data.username)\n                setPatientUsername(res.data.username)\n            }\n        } catch (e) {\n            setScreen('auth');\n            console.log(e);\n        }\n    };\n    return (\n        <div>\n            <h2>Username: {patientUsername}</h2>\n        </div>\n    ); \n\n}\n\nexport default withRouter(DetailPatientInfo);"]},"metadata":{},"sourceType":"module"}