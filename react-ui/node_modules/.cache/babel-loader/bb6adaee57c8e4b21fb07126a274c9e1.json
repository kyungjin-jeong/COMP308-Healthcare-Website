{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/nurse/DetailPatientInfo.js\";\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction DetailPatientInfo(props) {\n  const [data, setData] = useState([]);\n  const [screen, setScreen] = useState('auth');\n  const [showLoading, setShowLoading] = useState(false);\n  const apiUrl = \"http://localhost:3000/detailPatientInfo/\" + props.match.params.id;\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [tip, setTip] = useState([]);\n  const [message, setMessage] = useState('');\n  const apiUrlForSendingTip = \"http://localhost:3000/sendTip\";\n  const [currentUserID, setCurrentUserID] = useState('');\n  useEffect(() => {\n    readCookie();\n    setShowLoading(false);\n\n    const fetchData = async () => {\n      const result = await axios(apiUrl);\n      console.log('results from vitals' + result.data);\n\n      if (result.data == null) {\n        console.log(\"result.data is null!!\");\n      }\n\n      setData(result.data.course);\n      /*\n      axios.get(apiUrl)\n        .then(result => {\n          console.log('result.data:',result.data)\n          //check if the user has logged in\n          if(result.data.screen !== 'auth')\n          {\n            \n            console.log('results from vitals', result.data)\n            setData(result.data);\n            setShowLoading(false);\n          }\n        }).catch((error) => {\n          console.log('error in fetchData:', error)\n        });*/\n    };\n\n    fetchData();\n  }, []); //check if the user already logged-in\n\n  const readCookie = async () => {\n    try {\n      console.log('--- in readCookie function ---'); //\n\n      const res = await axios.get('/read_cookie'); // \n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n        console.log(\"current user id: \", res.data.id);\n        setCurrentUserID(res.data.id);\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  };\n\n  const sendTip = () => {\n    const data = {\n      patientId: props.match.params.id,\n      nurseId: currentUserID,\n      tip: tip.tip\n    };\n    console.log(\"data >>>>\", data);\n    axios.post(apiUrlForSendingTip, data).then(result => {\n      console.log(\"RESULT >>>> \", result);\n\n      if (result.data.message != null) {\n        setMessage(result.data.message);\n      }\n    }).catch(error => {\n      console.log(\"ERROR!! \", error);\n    }); // Close modal\n\n    handleClose();\n    readCookie();\n  };\n\n  const onChange = e => {\n    e.persist();\n    setTip({ ...tip,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, message.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 22\n    }\n  }, message)), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Testing\"), data.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    responsive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 37\n    }\n  }, \"Body Temperature\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }, \"Heart Rate\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }, \"Blood Pressure\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }, \"Respiratory Rate\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }, \"Visted Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, \"Patient\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, data.map((item, idx) => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 41\n    }\n  }, item.bodytemperature), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 41\n    }\n  }, item.heartrate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 41\n    }\n  }, item.bloodpressure), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 41\n    }\n  }, item.respiratoryrate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 41\n    }\n  }, item.visitedDate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 41\n    }\n  }, item.patient)))))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"send daily motivational tips\"), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, \"Send daily motivational tips to the patient !\")), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"5\",\n    id: \"tip\",\n    name: \"tip\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: sendTip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 29\n    }\n  }, \"Send\"))))));\n}\n\nexport default withRouter(DetailPatientInfo);","map":{"version":3,"sources":["/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/nurse/DetailPatientInfo.js"],"names":["React","useState","useEffect","Table","withRouter","axios","Button","Modal","Form","Alert","DetailPatientInfo","props","data","setData","screen","setScreen","showLoading","setShowLoading","apiUrl","match","params","id","show","setShow","handleClose","handleShow","tip","setTip","message","setMessage","apiUrlForSendingTip","currentUserID","setCurrentUserID","readCookie","fetchData","result","console","log","course","res","get","undefined","e","sendTip","patientId","nurseId","post","then","catch","error","onChange","persist","target","name","value","length","map","item","idx","bodytemperature","heartrate","bloodpressure","respiratoryrate","visitedDate","patient"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction DetailPatientInfo(props) {\n    const [data, setData] = useState([]);\n    const [screen, setScreen] = useState('auth');\n    const [showLoading, setShowLoading] = useState(false);\n    const apiUrl = \"http://localhost:3000/detailPatientInfo/\" + props.match.params.id;\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [tip, setTip] = useState([]);\n    const [message, setMessage] = useState('');\n    const apiUrlForSendingTip = \"http://localhost:3000/sendTip\";\n    const [currentUserID, setCurrentUserID] = useState('');\n\n    useEffect(() => {\n        readCookie();\n        setShowLoading(false);\n        const fetchData = async () => {\n            const result = await axios(apiUrl);\n            console.log('results from vitals' + result.data);\n\n            if(result.data == null) {\n                console.log(\"result.data is null!!\");\n            }\n\n            setData(result.data.course);\n            /*\n            axios.get(apiUrl)\n              .then(result => {\n                console.log('result.data:',result.data)\n                //check if the user has logged in\n                if(result.data.screen !== 'auth')\n                {\n                  \n                  console.log('results from vitals', result.data)\n                  setData(result.data);\n                  setShowLoading(false);\n                }\n              }).catch((error) => {\n                console.log('error in fetchData:', error)\n              });*/\n        };\n        fetchData();\n    }, []);\n\n\n    //check if the user already logged-in\n    const readCookie = async () => {\n        try {\n            console.log('--- in readCookie function ---');\n\n            //\n            const res = await axios.get('/read_cookie');\n            // \n            if (res.data.screen !== undefined) {\n                setScreen(res.data.screen);\n                console.log(res.data.screen)\n\n                console.log(\"current user id: \", res.data.id);\n                setCurrentUserID(res.data.id);\n            }\n        } catch (e) {\n            setScreen('auth');\n            console.log(e);\n        }\n    };\n\n    const sendTip = () => {\n        const data = {\n            patientId: props.match.params.id,\n            nurseId: currentUserID,\n            tip: tip.tip\n        };\n\n        console.log(\"data >>>>\", data);\n\n        axios.post(apiUrlForSendingTip, data).then((result) => {\n            console.log(\"RESULT >>>> \", result);\n\n            if (result.data.message != null) {\n                setMessage(result.data.message);\n            }\n\n        }).catch((error) => {\n            console.log(\"ERROR!! \", error);\n        });\n\n        // Close modal\n        handleClose();\n        readCookie();\n    };\n\n    const onChange = (e) => {\n        e.persist();\n        setTip({ ...tip, [e.target.name]: e.target.value });\n    }\n\n    return (\n        <div>\n\n            {message.length === 0\n                ?\n                <div></div>\n                :\n                <div><Alert variant=\"success\">{message}</Alert></div>\n            }\n\n            <h2>Testing</h2>\n\n            {data.length === 0\n                ?\n                    <div></div>\n                :           \n                    <div>\n                        <Table responsive>\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Body Temperature</th>\n                                    <th scope=\"col\">Heart Rate</th>\n                                    <th scope=\"col\">Blood Pressure</th>\n                                    <th scope=\"col\">Respiratory Rate</th>\n                                    <th scope=\"col\">Visted Date</th>\n                                    <th scope=\"col\">Patient</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {data.map((item, idx) => (\n                                    <tr>\n                                        <td>{item.bodytemperature}</td>\n                                        <td>{item.heartrate}</td>\n                                        <td>{item.bloodpressure}</td>\n                                        <td>{item.respiratoryrate}</td>\n                                        <td>{item.visitedDate}</td>\n                                        <td>{item.patient}</td>\n\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>     \n                </div>\n            }\n\n\n            <>\n                <Button variant=\"primary\" onClick={handleShow}>send daily motivational tips</Button>\n\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Send daily motivational tips to the patient !</Modal.Title>\n                    </Modal.Header>\n                    <Form>\n                        <Modal.Body>\n                            <Form.Group>\n                                {/* <Form.Label>Example textarea</Form.Label> */}\n                                <Form.Control as=\"textarea\" rows=\"5\" id=\"tip\" name=\"tip\" onChange={onChange} />\n                            </Form.Group>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n                            <Button variant=\"primary\" onClick={sendTip}>Send</Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </>\n        </div>\n    );\n\n}\n\nexport default withRouter(DetailPatientInfo);\n"]},"metadata":{},"sourceType":"module"}