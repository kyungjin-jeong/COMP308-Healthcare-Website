{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/Registration.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { withRouter } from 'react-router-dom';\nimport './Registration.css';\n\nfunction Registration(props) {\n  const [user, setUser] = useState({\n    _id: '',\n    usertype: '',\n    password: '',\n    firstname: '',\n    lastname: '',\n    address: '',\n    city: '',\n    postalCode: '',\n    phoneNumber: '',\n    email: '',\n    dateOfbirth: ''\n  });\n  const [valid, setValidation] = useState({\n    ispasswordValid: false,\n    isfirstnameVaild: false,\n    islastnameVaild: false,\n    isaddressValid: false,\n    iscityVaild: false,\n    ispostalCodeValid: false,\n    isphoneNumberVaild: false,\n    isEmailValid: false,\n    isDateValid: false\n  });\n  const [showLoading, setShowLoading] = useState(false);\n  const apiUrl = \"http://localhost:3000/\";\n\n  const saveUser = e => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = {\n      usertype: user.usertype,\n      firstname: user.firstname,\n      lastname: user.lastname,\n      email: user.email,\n      password: user.password,\n      phoneNumber: user.phoneNumber,\n      address: user.address,\n      city: user.city,\n      postalCode: user.postalCode,\n      dateOfbirth: user.dateOfbirth\n    };\n    axios.post(apiUrl, data).then(result => {\n      setShowLoading(false);\n      props.history.push('/confirmation');\n    }).catch(error => {\n      console.log(\"error >>> \", error);\n      setShowLoading(false);\n    });\n  };\n\n  const onChange = e => {\n    // e.persist();\n    if (e.target.name === 'firstname') {\n      if (e.target.value.length > 1) {\n        setValidation({\n          isfirstnameVaild: true\n        });\n        setUser({\n          firstname: e.target.valid\n        });\n      } else {\n        setValidation({\n          isfirstnameVaild: false\n        });\n      }\n    }\n\n    console.log(e.target.value);\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validateDate = e => {\n    const dateNumberRegExp = /^\\d{4}-\\d{2}-\\d{2}$/;\n\n    if (e.target.value.match(dateNumberRegExp)) {\n      setValidation({\n        isDateValid: true\n      });\n    } else {\n      setValidation({\n        isDateValid: false\n      });\n    }\n\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validateLastname = e => {\n    if (e.target.value.length > 1) {\n      setValidation({\n        islastnameVaild: true\n      });\n    } else {\n      setValidation({\n        islastnameVaild: false\n      });\n    }\n\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validateEmail = e => {\n    const emailRegExp = /^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/;\n\n    if (e.target.value.match(emailRegExp)) {\n      setValidation({\n        isEmailValid: true\n      });\n    } else {\n      setValidation({\n        isEmailValid: false\n      });\n    }\n\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validatePhoneNumber = e => {\n    const phoneNumberRegExp = /^\\d{3}-\\d{3}-\\d{4}$/;\n\n    if (e.target.value.match(phoneNumberRegExp)) {\n      setValidation({\n        isphoneNumberVaild: true\n      });\n    } else {\n      setValidation({\n        isphoneNumberVaild: false\n      });\n    }\n\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validatePassword = e => {\n    if (e.target.value.length > 3) {\n      setValidation({\n        ispasswordValid: true\n      });\n    } else {\n      setValidation({\n        ispasswordValid: false\n      });\n    }\n\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validateAddress = e => {\n    if (e.target.value.length > 7) {\n      setValidation({\n        isaddressValid: true\n      });\n    } else {\n      setValidation({\n        isaddressValid: false\n      });\n    }\n\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validateCity = e => {\n    if (e.target.value.length > 1) {\n      setValidation({\n        iscityVaild: true\n      });\n    } else {\n      setValidation({\n        iscityVaild: false\n      });\n    }\n\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validatePostalCode = e => {\n    if (e.target.value.length > 5) {\n      setValidation({\n        ispostalCodeValid: true\n      });\n    } else {\n      setValidation({\n        ispostalCodeValid: false\n      });\n    }\n\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const isEnteredFirstNameValid = () => {\n    if (user.firstname) return valid.isfirstnameVaild;\n  };\n\n  const isEnteredLastNameValid = () => {\n    if (user.lastname) return valid.islastnameVaild;\n  };\n\n  const isEnteredEmailValid = () => {\n    if (user.email) return valid.isEmailValid;\n  };\n\n  const isEnteredPasswordValid = () => {\n    if (user.password) return valid.ispasswordValid;\n  };\n\n  const isEnteredPhoneValid = () => {\n    if (user.phoneNumber) return valid.isphoneNumberVaild;\n  };\n\n  const isEnteredAddressValid = () => {\n    if (user.address) return valid.isaddressValid;\n  };\n\n  const isEnteredCityValid = () => {\n    if (user.city) return valid.iscityVaild;\n  };\n\n  const isEnteredPostalValid = () => {\n    if (user.postalCode) return valid.ispostalCodeValid;\n  };\n\n  const isEnteredDateValid = () => {\n    if (user.dateOfbirth) return valid.isDateValid;\n  };\n\n  const inputClassNameHelper = boolean => {\n    switch (boolean) {\n      case true:\n        return 'is-valid';\n\n      case false:\n        return 'is-invalid';\n\n      default:\n        return '';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, showLoading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, \"Loading...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, \" Create a New Account  \"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, \" Come join our Hero health! Let's set up your account.\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"signUpForm\",\n    onSubmit: saveUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-group\",\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 22\n    }\n  }, \"User Type\"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" col-sm-2 form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    name: \"usertype\",\n    type: \"radio\",\n    id: \"inlineCheckbox1\",\n    value: \"nurse\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    for: \"inlineCheckbox1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }, \"Nurse\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-2 form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    name: \"usertype\",\n    type: \"radio\",\n    id: \"inlineCheckbox1\",\n    value: \"patient\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    for: \"inlineCheckbox1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }, \"Patient\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: `form-control ${inputClassNameHelper(isEnteredEmailValid())}`,\n    id: \"emailInput\",\n    \"aria-describedby\": \"emailHelp\",\n    placeholder: \"abc@gmail.com\",\n    name: \"email\",\n    value: user.email,\n    onChange: validateEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: `form-control ${inputClassNameHelper(isEnteredPasswordValid())}`,\n    id: \"passwordInput\",\n    placeholder: \"Password needs to set over 3 letters \",\n    name: \"password\",\n    value: user.password,\n    onChange: validatePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control ${inputClassNameHelper(isEnteredFirstNameValid())}`,\n    id: \"firstname\",\n    name: \"firstname\",\n    placeholder: \"First Name\",\n    value: user.firstname,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control ${inputClassNameHelper(isEnteredLastNameValid())}`,\n    id: \"lastname\",\n    name: \"lastname\",\n    placeholder: \"Last Name\",\n    value: user.lastname,\n    onChange: validateLastname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  }, \"Date of Birth\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control ${inputClassNameHelper(isEnteredDateValid())}`,\n    id: \"dateOfbirth\",\n    name: \"dateOfbirth\",\n    value: user.dateOfbirth,\n    placeholder: \"ex) YYYY-MM-DD\",\n    onChange: validateDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"phoneNumberInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control ${inputClassNameHelper(isEnteredPhoneValid())}`,\n    id: \"phoneNumberInput\",\n    placeholder: \"ex)416-1234-1234\",\n    name: \"phoneNumber\",\n    value: user.phoneNumber,\n    onChange: validatePhoneNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 25\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control ${inputClassNameHelper(isEnteredAddressValid())}`,\n    id: \"passwordInput\",\n    placeholder: \"ex)941 Progree Ave\",\n    name: \"address\",\n    value: user.address,\n    onChange: validateAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-md-2\",\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 25\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control col-md-5 ${inputClassNameHelper(isEnteredCityValid())}`,\n    id: \"cityInput\",\n    placeholder: \"ex)Scarborough\",\n    name: \"city\",\n    value: user.city,\n    onChange: validateCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-md-2\",\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }, \"Postal Code\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control col-md-3  ${inputClassNameHelper(isEnteredPostalValid())}`,\n    id: \"postalCodeInput\",\n    placeholder: \" M1G 3T8\",\n    name: \"postalCode\",\n    value: user.postalCode,\n    onChange: validatePostalCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n}\n\nexport default withRouter(Registration);","map":{"version":3,"sources":["/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/Registration.js"],"names":["React","useState","useEffect","axios","Spinner","withRouter","Registration","props","user","setUser","_id","usertype","password","firstname","lastname","address","city","postalCode","phoneNumber","email","dateOfbirth","valid","setValidation","ispasswordValid","isfirstnameVaild","islastnameVaild","isaddressValid","iscityVaild","ispostalCodeValid","isphoneNumberVaild","isEmailValid","isDateValid","showLoading","setShowLoading","apiUrl","saveUser","e","preventDefault","data","post","then","result","history","push","catch","error","console","log","onChange","target","name","value","length","validateDate","dateNumberRegExp","match","validateLastname","validateEmail","emailRegExp","validatePhoneNumber","phoneNumberRegExp","validatePassword","validateAddress","validateCity","validatePostalCode","isEnteredFirstNameValid","isEnteredLastNameValid","isEnteredEmailValid","isEnteredPasswordValid","isEnteredPhoneValid","isEnteredAddressValid","isEnteredCityValid","isEnteredPostalValid","isEnteredDateValid","inputClassNameHelper","boolean"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,oBAAP;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IACAR,QAAQ,CAAC;AACPS,IAAAA,GAAG,EAAE,EADE;AAEPC,IAAAA,QAAQ,EAAE,EAFH;AAGPC,IAAAA,QAAQ,EAAE,EAHH;AAIPC,IAAAA,SAAS,EAAE,EAJJ;AAKPC,IAAAA,QAAQ,EAAE,EALH;AAMPC,IAAAA,OAAO,EAAE,EANF;AAOPC,IAAAA,IAAI,EAAE,EAPC;AAQPC,IAAAA,UAAU,EAAE,EARL;AASPC,IAAAA,WAAW,EAAE,EATN;AAUPC,IAAAA,KAAK,EAAE,EAVA;AAWPC,IAAAA,WAAW,EAAE;AAXN,GAAD,CADd;AAeA,QAAM,CAACC,KAAD,EAAQC,aAAR,IACArB,QAAQ,CAAC;AACPsB,IAAAA,eAAe,EAAE,KADV;AAEPC,IAAAA,gBAAgB,EAAE,KAFX;AAGPC,IAAAA,eAAe,EAAE,KAHV;AAIPC,IAAAA,cAAc,EAAE,KAJT;AAKPC,IAAAA,WAAW,EAAE,KALN;AAMPC,IAAAA,iBAAiB,EAAE,KANZ;AAOPC,IAAAA,kBAAkB,EAAE,KAPb;AAQPC,IAAAA,YAAY,EAAE,KARP;AASPC,IAAAA,WAAW,EAAE;AATN,GAAD,CADd;AAYA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChC,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMiC,MAAM,GAAG,wBAAf;;AAEA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACpBH,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAG,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG;AACT3B,MAAAA,QAAQ,EAAEH,IAAI,CAACG,QADN;AAETE,MAAAA,SAAS,EAAEL,IAAI,CAACK,SAFP;AAGTC,MAAAA,QAAQ,EAAEN,IAAI,CAACM,QAHN;AAITK,MAAAA,KAAK,EAAEX,IAAI,CAACW,KAJH;AAKTP,MAAAA,QAAQ,EAAEJ,IAAI,CAACI,QALN;AAMTM,MAAAA,WAAW,EAAEV,IAAI,CAACU,WANT;AAOTH,MAAAA,OAAO,EAAEP,IAAI,CAACO,OAPL;AAQTC,MAAAA,IAAI,EAAER,IAAI,CAACQ,IARF;AASTC,MAAAA,UAAU,EAAET,IAAI,CAACS,UATR;AAUTG,MAAAA,WAAW,EAAEZ,IAAI,CAACY;AAVT,KAAb;AAcAjB,IAAAA,KAAK,CAACoC,IAAN,CAAWL,MAAX,EAAmBI,IAAnB,EAAyBE,IAAzB,CAA+BC,MAAD,IAAY;AACtCR,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA1B,MAAAA,KAAK,CAACmC,OAAN,CAAcC,IAAd,CAAmB,eAAnB;AACH,KAHD,EAGGC,KAHH,CAGUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACAZ,MAAAA,cAAc,CAAC,KAAD,CAAd;AAAsB,KAL1B;AAOH,GAxBD;;AA2BA,QAAMe,QAAQ,GAAIZ,CAAD,IAAO;AACpB;AACA,QAAIA,CAAC,CAACa,MAAF,CAASC,IAAT,KAAkB,WAAtB,EAAmC;AAC/B,UAAId,CAAC,CAACa,MAAF,CAASE,KAAT,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC3B9B,QAAAA,aAAa,CAAC;AAAEE,UAAAA,gBAAgB,EAAE;AAApB,SAAD,CAAb;AACAf,QAAAA,OAAO,CAAC;AAAEI,UAAAA,SAAS,EAAEuB,CAAC,CAACa,MAAF,CAAS5B;AAAtB,SAAD,CAAP;AAEH,OAJD,MAKK;AACDC,QAAAA,aAAa,CAAC;AAAEE,UAAAA,gBAAgB,EAAE;AAApB,SAAD,CAAb;AACH;AACJ;;AAACsB,IAAAA,OAAO,CAACC,GAAR,CAAYX,CAAC,CAACa,MAAF,CAASE,KAArB;AACF1C,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAAC4B,CAAC,CAACa,MAAF,CAASC,IAAV,GAAiBd,CAAC,CAACa,MAAF,CAASE;AAArC,KAAD,CAAP;AACH,GAbD;;AAeA,QAAME,YAAY,GAAIjB,CAAD,IAAO;AACxB,UAAMkB,gBAAgB,GAAG,qBAAzB;;AAEA,QAAIlB,CAAC,CAACa,MAAF,CAASE,KAAT,CAAeI,KAAf,CAAqBD,gBAArB,CAAJ,EAA4C;AACtChC,MAAAA,aAAa,CAAC;AAAES,QAAAA,WAAW,EAAE;AAAf,OAAD,CAAb;AACL,KAFD,MAEO;AACHT,MAAAA,aAAa,CAAC;AAAES,QAAAA,WAAW,EAAE;AAAf,OAAD,CAAb;AACH;;AACDtB,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAAC4B,CAAC,CAACa,MAAF,CAASC,IAAV,GAAiBd,CAAC,CAACa,MAAF,CAASE;AAArC,KAAD,CAAP;AACH,GATD;;AAUA,QAAMK,gBAAgB,GAAIpB,CAAD,IAAO;AAC5B,QAAIA,CAAC,CAACa,MAAF,CAASE,KAAT,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC3B9B,MAAAA,aAAa,CAAC;AAAEG,QAAAA,eAAe,EAAE;AAAnB,OAAD,CAAb;AACH,KAFD,MAEO;AACHH,MAAAA,aAAa,CAAC;AAAEG,QAAAA,eAAe,EAAE;AAAnB,OAAD,CAAb;AACH;;AACDhB,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAAC4B,CAAC,CAACa,MAAF,CAASC,IAAV,GAAiBd,CAAC,CAACa,MAAF,CAASE;AAArC,KAAD,CAAP;AACH,GAPD;;AAQA,QAAMM,aAAa,GAAIrB,CAAD,IAAO;AACzB,UAAMsB,WAAW,GAAG,6FAApB;;AAEA,QAAItB,CAAC,CAACa,MAAF,CAASE,KAAT,CAAeI,KAAf,CAAqBG,WAArB,CAAJ,EAAuC;AACnCpC,MAAAA,aAAa,CAAC;AAAEQ,QAAAA,YAAY,EAAE;AAAhB,OAAD,CAAb;AACH,KAFD,MAEO;AACHR,MAAAA,aAAa,CAAC;AAAEQ,QAAAA,YAAY,EAAE;AAAhB,OAAD,CAAb;AACH;;AAAArB,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAAC4B,CAAC,CAACa,MAAF,CAASC,IAAV,GAAiBd,CAAC,CAACa,MAAF,CAASE;AAArC,KAAD,CAAP;AACF,GARH;;AAUE,QAAMQ,mBAAmB,GAAIvB,CAAD,IAAO;AACjC,UAAMwB,iBAAiB,GAAG,qBAA1B;;AAEA,QAAIxB,CAAC,CAACa,MAAF,CAASE,KAAT,CAAeI,KAAf,CAAqBK,iBAArB,CAAJ,EAA6C;AACzCtC,MAAAA,aAAa,CAAC;AAAEO,QAAAA,kBAAkB,EAAE;AAAtB,OAAD,CAAb;AACH,KAFD,MAEO;AACHP,MAAAA,aAAa,CAAC;AAAEO,QAAAA,kBAAkB,EAAE;AAAtB,OAAD,CAAb;AACH;;AAAApB,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAAC4B,CAAC,CAACa,MAAF,CAASC,IAAV,GAAiBd,CAAC,CAACa,MAAF,CAASE;AAArC,KAAD,CAAP;AACF,GARD;;AASA,QAAMU,gBAAgB,GAAIzB,CAAD,IAAO;AAC9B,QAAIA,CAAC,CAACa,MAAF,CAASE,KAAT,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC3B9B,MAAAA,aAAa,CAAC;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAD,CAAb;AACH,KAFD,MAEO;AACHD,MAAAA,aAAa,CAAC;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAD,CAAb;AACH;;AACDd,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAAC4B,CAAC,CAACa,MAAF,CAASC,IAAV,GAAiBd,CAAC,CAACa,MAAF,CAASE;AAArC,KAAD,CAAP;AACH,GAPC;;AAQF,QAAMW,eAAe,GAAI1B,CAAD,IAAO;AAC3B,QAAIA,CAAC,CAACa,MAAF,CAASE,KAAT,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC3B9B,MAAAA,aAAa,CAAC;AAAEI,QAAAA,cAAc,EAAE;AAAlB,OAAD,CAAb;AACH,KAFD,MAEO;AACHJ,MAAAA,aAAa,CAAC;AAAEI,QAAAA,cAAc,EAAE;AAAlB,OAAD,CAAb;AACH;;AACDjB,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAAC4B,CAAC,CAACa,MAAF,CAASC,IAAV,GAAiBd,CAAC,CAACa,MAAF,CAASE;AAArC,KAAD,CAAP;AACH,GAPD;;AAQA,QAAMY,YAAY,GAAI3B,CAAD,IAAO;AACxB,QAAIA,CAAC,CAACa,MAAF,CAASE,KAAT,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC3B9B,MAAAA,aAAa,CAAC;AAAEK,QAAAA,WAAW,EAAE;AAAf,OAAD,CAAb;AACH,KAFD,MAEO;AACHL,MAAAA,aAAa,CAAC;AAAEK,QAAAA,WAAW,EAAE;AAAf,OAAD,CAAb;AACH;;AACDlB,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAAC4B,CAAC,CAACa,MAAF,CAASC,IAAV,GAAiBd,CAAC,CAACa,MAAF,CAASE;AAArC,KAAD,CAAP;AACH,GAPD;;AAQA,QAAMa,kBAAkB,GAAI5B,CAAD,IAAO;AAC9B,QAAIA,CAAC,CAACa,MAAF,CAASE,KAAT,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC3B9B,MAAAA,aAAa,CAAC;AAAEM,QAAAA,iBAAiB,EAAE;AAArB,OAAD,CAAb;AACH,KAFD,MAEO;AACHN,MAAAA,aAAa,CAAC;AAAEM,QAAAA,iBAAiB,EAAE;AAArB,OAAD,CAAb;AACH;;AACDnB,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAAC4B,CAAC,CAACa,MAAF,CAASC,IAAV,GAAiBd,CAAC,CAACa,MAAF,CAASE;AAArC,KAAD,CAAP;AACH,GAPD;;AASA,QAAMc,uBAAuB,GAAG,MAAM;AAAC,QAAIzD,IAAI,CAACK,SAAT,EAAoB,OAAOQ,KAAK,CAACG,gBAAb;AAA+B,GAA1F;;AACA,QAAM0C,sBAAsB,GAAG,MAAM;AAAC,QAAI1D,IAAI,CAACM,QAAT,EAAmB,OAAOO,KAAK,CAACI,eAAb;AAA8B,GAAvF;;AACA,QAAM0C,mBAAmB,GAAG,MAAM;AAAC,QAAI3D,IAAI,CAACW,KAAT,EAAgB,OAAOE,KAAK,CAACS,YAAb;AAA2B,GAA9E;;AACA,QAAMsC,sBAAsB,GAAG,MAAM;AAAC,QAAI5D,IAAI,CAACI,QAAT,EAAmB,OAAOS,KAAK,CAACE,eAAb;AAA8B,GAAvF;;AACA,QAAM8C,mBAAmB,GAAG,MAAM;AAAC,QAAI7D,IAAI,CAACU,WAAT,EAAsB,OAAOG,KAAK,CAACQ,kBAAb;AAAiC,GAA1F;;AACA,QAAMyC,qBAAqB,GAAG,MAAM;AAAC,QAAI9D,IAAI,CAACO,OAAT,EAAkB,OAAOM,KAAK,CAACK,cAAb;AAA6B,GAApF;;AACA,QAAM6C,kBAAkB,GAAG,MAAM;AAAC,QAAI/D,IAAI,CAACQ,IAAT,EAAe,OAAOK,KAAK,CAACM,WAAb;AAA2B,GAA5E;;AACA,QAAM6C,oBAAoB,GAAG,MAAM;AAAC,QAAIhE,IAAI,CAACS,UAAT,EAAqB,OAAOI,KAAK,CAACO,iBAAb;AAAgC,GAAzF;;AACA,QAAM6C,kBAAkB,GAAG,MAAM;AAAC,QAAIjE,IAAI,CAACY,WAAT,EAAsB,OAAOC,KAAK,CAACU,WAAb;AAA0B,GAAlF;;AAEA,QAAM2C,oBAAoB,GAAGC,OAAO,IAAI;AACpC,YAAQA,OAAR;AACI,WAAK,IAAL;AACI,eAAO,UAAP;;AACJ,WAAK,KAAL;AACI,eAAO,YAAP;;AACJ;AACI,eAAO,EAAP;AANR;AAQH,GATD;;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK3C,WAAW,iBACR,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAFR,eAOI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAHJ,eAKI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEG,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,OAAO,EAAC,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAL,MADA,eAEI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,IAAI,EAAC,UAAzC;AAAoD,IAAA,IAAI,EAAC,OAAzD;AAAiE,IAAA,EAAE,EAAC,iBAApE;AAAsF,IAAA,KAAK,EAAC,OAA5F;AAAoG,IAAA,QAAQ,EAAEa,QAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,GAAG,EAAC,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,IAAI,EAAC,UAAzC;AAAoD,IAAA,IAAI,EAAC,OAAzD;AAAiE,IAAA,EAAE,EAAC,iBAApE;AAAsF,IAAA,KAAK,EAAC,SAA5F;AAAsG,IAAA,QAAQ,EAAEA,QAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,GAAG,EAAC,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CALJ,CAFJ,eAWU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXV,eAYI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,SAAS,EAAG,gBAAe0B,oBAAoB,CAACP,mBAAmB,EAApB,CAAwB,EAF3E;AAGI,IAAA,EAAE,EAAC,YAHP;AAII,wBAAiB,WAJrB;AAKI,IAAA,WAAW,EAAC,eALhB;AAMI,IAAA,IAAI,EAAC,OANT;AAOI,IAAA,KAAK,EAAE3D,IAAI,CAACW,KAPhB;AAQI,IAAA,QAAQ,EAAEsC,aARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAZJ,eA0BI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,SAAS,EAAG,gBAAeiB,oBAAoB,CAACN,sBAAsB,EAAvB,CAA2B,EAF9E;AAGI,IAAA,EAAE,EAAC,eAHP;AAII,IAAA,WAAW,EAAC,uCAJhB;AAKI,IAAA,IAAI,EAAC,UALT;AAMI,IAAA,KAAK,EAAE5D,IAAI,CAACI,QANhB;AAOI,IAAA,QAAQ,EAAEiD,gBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA1BJ,eAuCI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAG,gBAAea,oBAAoB,CAACT,uBAAuB,EAAxB,CAA4B,EAF/E;AAGI,IAAA,EAAE,EAAC,WAHP;AAII,IAAA,IAAI,EAAC,WAJT;AAKI,IAAA,WAAW,EAAC,YALhB;AAMI,IAAA,KAAK,EAAEzD,IAAI,CAACK,SANhB;AAOI,IAAA,QAAQ,EAAEmC,QAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAvCJ,eAmDI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAG,gBAAe0B,oBAAoB,CAACR,sBAAsB,EAAvB,CAA2B,EAF9E;AAGI,IAAA,EAAE,EAAC,UAHP;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,WAAW,EAAC,WALhB;AAMI,IAAA,KAAK,EAAE1D,IAAI,CAACM,QANhB;AAOI,IAAA,QAAQ,EAAE0C,gBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAnDJ,eA+DI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAG,gBAAekB,oBAAoB,CAACD,kBAAkB,EAAnB,CAAuB,EAF1E;AAGI,IAAA,EAAE,EAAC,aAHP;AAII,IAAA,IAAI,EAAC,aAJT;AAKI,IAAA,KAAK,EAAEjE,IAAI,CAACY,WALhB;AAMI,IAAA,WAAW,EAAC,gBANhB;AAOI,IAAA,QAAQ,EAAEiC,YAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA/DJ,eA2EI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAG,gBAAeqB,oBAAoB,CAACL,mBAAmB,EAApB,CAAwB,EAF3E;AAGI,IAAA,EAAE,EAAC,kBAHP;AAII,IAAA,WAAW,EAAC,kBAJhB;AAKI,IAAA,IAAI,EAAC,aALT;AAMI,IAAA,KAAK,EAAE7D,IAAI,CAACU,WANhB;AAOI,IAAA,QAAQ,EAAEyC,mBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA3EJ,eAwFI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAG,gBAAee,oBAAoB,CAACJ,qBAAqB,EAAtB,CAA0B,EAF7E;AAII,IAAA,EAAE,EAAC,eAJP;AAKI,IAAA,WAAW,EAAC,oBALhB;AAMI,IAAA,IAAI,EAAC,SANT;AAOI,IAAA,KAAK,EAAE9D,IAAI,CAACO,OAPhB;AAQI,IAAA,QAAQ,EAAE+C,eARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAxFJ,eAqGI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,UAAjB;AAA4B,IAAA,OAAO,EAAC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAG,yBAAwBY,oBAAoB,CAACH,kBAAkB,EAAnB,CAAuB,EAFnF;AAII,IAAA,EAAE,EAAC,WAJP;AAKI,IAAA,WAAW,EAAC,gBALhB;AAMI,IAAA,IAAI,EAAC,MANT;AAOI,IAAA,KAAK,EAAE/D,IAAI,CAACQ,IAPhB;AAQI,IAAA,QAAQ,EAAE+C,YARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAaI;AAAO,IAAA,SAAS,EAAC,UAAjB;AAA4B,IAAA,OAAO,EAAC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAbJ,eAcI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAG,0BAAyBW,oBAAoB,CAACF,oBAAoB,EAArB,CAAyB,EAFtF;AAII,IAAA,EAAE,EAAC,iBAJP;AAKI,IAAA,WAAW,EAAC,UALhB;AAMI,IAAA,IAAI,EAAC,YANT;AAOI,IAAA,KAAK,EAAEhE,IAAI,CAACS,UAPhB;AAQI,IAAA,QAAQ,EAAE+C,kBARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CArGJ,eA8HI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,2BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9HJ,CALJ,CAPJ,CADJ;AAkJH;;AAED,eAAe3D,UAAU,CAACC,YAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { withRouter } from 'react-router-dom';\n\nimport './Registration.css'\n\n\nfunction Registration(props) {\n    const [user, setUser]\n        = useState({\n            _id: '',\n            usertype: '',\n            password: '',\n            firstname: '',\n            lastname: '',\n            address: '',\n            city: '',\n            postalCode: '',\n            phoneNumber: '',\n            email: '',\n            dateOfbirth: ''\n        });\n\n    const [valid, setValidation]\n        = useState({\n            ispasswordValid: false,\n            isfirstnameVaild: false,\n            islastnameVaild: false,\n            isaddressValid: false,\n            iscityVaild: false,\n            ispostalCodeValid: false,\n            isphoneNumberVaild: false,\n            isEmailValid: false,\n            isDateValid: false\n        });\n    const [showLoading, setShowLoading] = useState(false);\n    const apiUrl = \"http://localhost:3000/\";\n\n    const saveUser = (e) => {\n        setShowLoading(true);\n        e.preventDefault();\n        const data = {\n            usertype: user.usertype,\n            firstname: user.firstname,\n            lastname: user.lastname,\n            email: user.email,\n            password: user.password,\n            phoneNumber: user.phoneNumber,\n            address: user.address,\n            city: user.city,\n            postalCode: user.postalCode,\n            dateOfbirth: user.dateOfbirth\n\n        };\n\n        axios.post(apiUrl, data).then((result) => {\n            setShowLoading(false);\n            props.history.push('/confirmation')\n        }).catch((error) => {\n            console.log(\"error >>> \", error);\n            setShowLoading(false)}\n        );\n    };\n\n\n    const onChange = (e) => {\n        // e.persist();\n        if (e.target.name === 'firstname') {\n            if (e.target.value.length > 1) {\n                setValidation({ isfirstnameVaild: true })\n                setUser({ firstname: e.target.valid })\n               \n            }\n            else {\n                setValidation({ isfirstnameVaild: false })\n            }\n        } console.log(e.target.value)\n        setUser({ ...user, [e.target.name]: e.target.value });\n    }\n\n    const validateDate = (e) => {\n        const dateNumberRegExp = /^\\d{4}-\\d{2}-\\d{2}$/;\n      \n        if (e.target.value.match(dateNumberRegExp)) {\n              setValidation({ isDateValid: true })\n        } else {\n            setValidation({ isDateValid: false })\n        }\n        setUser({ ...user, [e.target.name]: e.target.value });\n    };\n    const validateLastname = (e) => {\n        if (e.target.value.length > 1) {\n            setValidation({ islastnameVaild: true })\n        } else {\n            setValidation({ islastnameVaild: false })\n        }\n        setUser({ ...user, [e.target.name]: e.target.value });\n    };\n    const validateEmail = (e) => {\n        const emailRegExp = /^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/;\n      \n        if (e.target.value.match(emailRegExp)) {\n            setValidation({ isEmailValid: true })\n        } else {\n            setValidation({ isEmailValid: false })\n        }setUser({ ...user, [e.target.name]: e.target.value });\n      };\n\n      const validatePhoneNumber = (e) => {\n        const phoneNumberRegExp = /^\\d{3}-\\d{3}-\\d{4}$/;\n      \n        if (e.target.value.match(phoneNumberRegExp)) {\n            setValidation({ isphoneNumberVaild: true })\n        } else {\n            setValidation({ isphoneNumberVaild: false })\n        }setUser({ ...user, [e.target.name]: e.target.value });\n      };\n      const validatePassword = (e) => {\n        if (e.target.value.length > 3) {\n            setValidation({ ispasswordValid: true })\n        } else {\n            setValidation({ ispasswordValid: false })\n        }\n        setUser({ ...user, [e.target.name]: e.target.value });\n    };\n    const validateAddress = (e) => {\n        if (e.target.value.length > 7) {\n            setValidation({ isaddressValid: true })\n        } else {\n            setValidation({ isaddressValid: false })\n        }\n        setUser({ ...user, [e.target.name]: e.target.value });\n    };\n    const validateCity = (e) => {\n        if (e.target.value.length > 1) {\n            setValidation({ iscityVaild: true })\n        } else {\n            setValidation({ iscityVaild: false })\n        }\n        setUser({ ...user, [e.target.name]: e.target.value });\n    };\n    const validatePostalCode = (e) => {\n        if (e.target.value.length > 5) {\n            setValidation({ ispostalCodeValid: true })\n        } else {\n            setValidation({ ispostalCodeValid: false })\n        }\n        setUser({ ...user, [e.target.name]: e.target.value });\n    };\n\n    const isEnteredFirstNameValid = () => {if (user.firstname) return valid.isfirstnameVaild;};\n    const isEnteredLastNameValid = () => {if (user.lastname) return valid.islastnameVaild;};\n    const isEnteredEmailValid = () => {if (user.email) return valid.isEmailValid;};\n    const isEnteredPasswordValid = () => {if (user.password) return valid.ispasswordValid;};\n    const isEnteredPhoneValid = () => {if (user.phoneNumber) return valid.isphoneNumberVaild;};\n    const isEnteredAddressValid = () => {if (user.address) return valid.isaddressValid;};\n    const isEnteredCityValid = () => {if (user.city) return valid.iscityVaild; };\n    const isEnteredPostalValid = () => {if (user.postalCode) return valid.ispostalCodeValid;};\n    const isEnteredDateValid = () => {if (user.dateOfbirth) return valid.isDateValid;};\n\n    const inputClassNameHelper = boolean => {\n        switch (boolean) {\n            case true:\n                return 'is-valid';\n            case false:\n                return 'is-invalid';\n            default:\n                return '';\n        }\n    };\n\n    return (\n        <div>\n            {showLoading &&\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            }\n\n            <div className=\"App\">\n                <br></br>\n                <h2> Create a New Account  </h2>\n                <h4> Come join our Hero health! Let's set up your account.</h4>\n\n                <form className=\"signUpForm\" onSubmit={saveUser}>\n                <div><label className=\"form-group\" htmlFor=\"\">User Type</label> </div>\n                    <div className=\"form-control\">\n                        <div className=\" col-sm-2 form-check form-check-inline\">\n                            <input className=\"form-check-input\" name=\"usertype\" type=\"radio\" id=\"inlineCheckbox1\" value=\"nurse\" onChange={onChange} />\n                            <label className=\"form-check-label\" for=\"inlineCheckbox1\">Nurse</label>\n                        </div>\n                        <div className=\"col-sm-2 form-check form-check-inline\">\n                            <input className=\"form-check-input\" name=\"usertype\" type=\"radio\" id=\"inlineCheckbox1\" value=\"patient\" onChange={onChange} />\n                            <label className=\"form-check-label\" for=\"inlineCheckbox1\">Patient</label>\n                        </div> \n                    </div><br></br>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"emailInput\">Email</label>\n                        <input\n                            type=\"email\"\n                            className={`form-control ${inputClassNameHelper(isEnteredEmailValid())}`}\n                            id=\"emailInput\"\n                            aria-describedby=\"emailHelp\"\n                            placeholder=\"abc@gmail.com\"\n                            name=\"email\"\n                            value={user.email}\n                            onChange={validateEmail}\n\n                        />\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"\">Password</label>\n                        <input\n                            type=\"password\"\n                            className={`form-control ${inputClassNameHelper(isEnteredPasswordValid())}`}\n                            id=\"passwordInput\"\n                            placeholder=\"Password needs to set over 3 letters \"\n                            name=\"password\"\n                            value={user.password}\n                            onChange={validatePassword}\n\n                        />\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"name\">First Name</label>\n                        <input\n                            type=\"text\"\n                            className={`form-control ${inputClassNameHelper(isEnteredFirstNameValid())}`}\n                            id=\"firstname\"\n                            name=\"firstname\"\n                            placeholder=\"First Name\"\n                            value={user.firstname}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"name\">Last Name</label>\n                        <input\n                            type=\"text\"\n                            className={`form-control ${inputClassNameHelper(isEnteredLastNameValid())}`}\n                            id=\"lastname\"\n                            name=\"lastname\"\n                            placeholder=\"Last Name\"\n                            value={user.lastname}\n                            onChange={validateLastname}\n                        />\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"name\">Date of Birth</label>\n                        <input\n                            type=\"text\"\n                            className={`form-control ${inputClassNameHelper(isEnteredDateValid())}`}\n                            id=\"dateOfbirth\"\n                            name=\"dateOfbirth\"\n                            value={user.dateOfbirth}\n                            placeholder=\"ex) YYYY-MM-DD\"\n                            onChange={validateDate}\n                        />\n                    </div>                    \n                    <div className=\"form-group row\">\n                        <label htmlFor=\"phoneNumberInput\">Phone Number</label>\n                        <input\n                            type=\"text\"\n                            className={`form-control ${inputClassNameHelper(isEnteredPhoneValid())}`}\n                            id=\"phoneNumberInput\"\n                            placeholder=\"ex)416-1234-1234\"\n                            name=\"phoneNumber\"\n                            value={user.phoneNumber}\n                            onChange={validatePhoneNumber}\n\n                        />\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"\">Address</label>\n                        <input\n                            type=\"text\"\n                            className={`form-control ${inputClassNameHelper(isEnteredAddressValid())}`}\n\n                            id=\"passwordInput\"\n                            placeholder=\"ex)941 Progree Ave\"\n                            name=\"address\"\n                            value={user.address}\n                            onChange={validateAddress}\n                        />\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-md-2\" htmlFor=\"\">City</label>\n                        <input\n                            type=\"text\"\n                            className={`form-control col-md-5 ${inputClassNameHelper(isEnteredCityValid())}`}\n\n                            id=\"cityInput\"\n                            placeholder=\"ex)Scarborough\"\n                            name=\"city\"\n                            value={user.city}\n                            onChange={validateCity}\n                        />\n\n                        <label className=\"col-md-2\" htmlFor=\"\">Postal Code</label>\n                        <input\n                            type=\"text\"\n                            className={`form-control col-md-3  ${inputClassNameHelper(isEnteredPostalValid())}`}\n\n                            id=\"postalCodeInput\"\n                            placeholder=\" M1G 3T8\"\n                            name=\"postalCode\"\n                            value={user.postalCode}\n                            onChange={validatePostalCode}\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                        Submit\n                     </button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Registration);\n"]},"metadata":{},"sourceType":"module"}