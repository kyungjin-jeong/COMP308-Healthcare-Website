{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios'; //\n\nimport View from './View'; //\n\nimport { withRouter } from 'react-router-dom';\n\nfunction Login(props) {\n  //state variable for the screen, admin or user\n  const [screen, setScreen] = useState('auth'); //store input field data, user name and password\n\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const apiUrl = \"http://localhost:3000/signin\"; //send username and password to the server\n  // for initial authentication\n\n  const auth = async () => {\n    console.log('calling auth');\n    console.log(username);\n\n    try {\n      //make a get request to /authenticate end-point on the server\n      const loginData = {\n        auth: {\n          username,\n          password\n        }\n      }; //call api\n\n      const res = await axios.post(apiUrl, loginData);\n      console.log(res.data.auth);\n      console.log(res.data.screen); //process the response\n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n      }\n    } catch (e) {\n      //print the error\n      console.log(e);\n    }\n  }; //check if the user already logged-in\n\n\n  const readCookie = async () => {\n    try {\n      console.log('--- in readCookie function ---'); //\n\n      const res = await axios.get('/read_cookie'); // \n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  }; //runs the first time the view is rendered\n  //to check if user is signed in\n\n\n  useEffect(() => {\n    readCookie();\n  }, []); //only the first render\n\n  const register = () => {\n    props.history.push({\n      pathname: '/registration'\n    });\n  }; //\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"LoginForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, screen === 'auth' ? /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter student number\",\n    type: \"text\",\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 70\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 76\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: () => {\n      register();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Regester\"))) : /*#__PURE__*/React.createElement(View, {\n    screen: screen,\n    setScreen: setScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/Login.js"],"names":["React","useState","useEffect","Form","Button","axios","View","withRouter","Login","props","screen","setScreen","username","setUsername","password","setPassword","apiUrl","auth","console","log","loginData","res","post","data","undefined","e","readCookie","get","register","history","push","pathname","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n//\nimport View from './View'\n//\nimport { withRouter } from 'react-router-dom';\n\nfunction Login(props) {\n  //state variable for the screen, admin or user\n  const [screen, setScreen] = useState('auth');\n  //store input field data, user name and password\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n\n  const apiUrl = \"http://localhost:3000/signin\";\n  //send username and password to the server\n  // for initial authentication\n  const auth = async () => {\n    console.log('calling auth')\n    console.log(username)\n    try {\n      //make a get request to /authenticate end-point on the server\n      const loginData = { auth: { username, password } }\n      //call api\n      const res = await axios.post(apiUrl, loginData);\n      console.log(res.data.auth)\n      console.log(res.data.screen)\n      //process the response\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n      }\n    } catch (e) { //print the error\n      console.log(e);\n    }\n\n  };\n\n  //check if the user already logged-in\n  const readCookie = async () => {\n    try {\n      console.log('--- in readCookie function ---');\n\n      //\n      const res = await axios.get('/read_cookie');\n      // \n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen)\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  };\n  //runs the first time the view is rendered\n  //to check if user is signed in\n  useEffect(() => {\n    readCookie();\n  }, []); //only the first render\n\n  const register = () => {\n    props.history.push({\n      pathname: '/registration'\n    });\n  }\n\n  //\n  return (\n    <div>\n      <br /><br />\n      <div className=\"LoginForm\">\n        {screen === 'auth'\n          ?\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Enter student number\" type=\"text\" onChange={e => setUsername(e.target.value)} />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\n            </Form.Group>\n            <div className=\"Buttons\">\n              <Button variant=\"primary\" onClick={auth}>Login</Button><br /><br />\n              <Button variant=\"success\" onClick={() => { register() }}>Regester</Button>\n            </div>\n          </Form>\n          : <View screen={screen} setScreen={setScreen} />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(Login);\n\n"]},"metadata":{},"sourceType":"module"}