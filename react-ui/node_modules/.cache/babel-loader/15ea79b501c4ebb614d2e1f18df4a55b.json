{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/nurse/DetailPatientInfo.js\";\nimport React, { useState, useEffect } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nfunction DetailPatientInfo(props) {\n  const [data, setData] = useState([]);\n  const [screen, setScreen] = useState('auth');\n  const [patientUsername, setPatientUsername] = useState(); // console.log('props.screen', props.screen);\n\n  const [showLoading, setShowLoading] = useState(false);\n  const apiUrl = \"http://localhost:3000/detailPatientInfo/\" + props.match.params.id;\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [tip, setTip] = useState([]);\n  const [message, setMessage] = useState('');\n  const apiUrlForSendingTip = \"http://localhost:3000/sendTip\";\n  const [currentUserID, setCurrentUserID] = useState('');\n  useEffect(() => {\n    readCookie();\n    setShowLoading(false);\n\n    const fetchData = async () => {\n      const result = await axios(apiUrl);\n      console.log('results from students' + result.data); // setCurrentUser(res.data.id);\n    };\n\n    fetchData();\n  }, []); //check if the user already logged-in\n\n  const readCookie = async () => {\n    try {\n      console.log('--- in readCookie function ---'); //\n\n      const res = await axios.get('/read_cookie'); // \n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n        console.log(\"username::\" + res.data.username);\n        setPatientUsername(res.data.username);\n        console.log(\"current user id: \", res.data.id);\n        setCurrentUserID(res.data.id);\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  };\n\n  const sendTip = () => {\n    const data = {\n      patientId: props.match.params.id,\n      nurseId: currentUserID,\n      tip: tip.tip\n    };\n    console.log(\"data >>>>\", data);\n    axios.post(apiUrlForSendingTip, data).then(result => {\n      console.log(\"RESULT >>>> \", result);\n\n      if (result != null) {\n        setMessage('Your daily motivational tip is successfully sent to this patient !');\n      }\n    }).catch(error => {\n      console.log(\"ERROR!! \", error);\n    }); // Close modal\n\n    handleClose();\n  };\n\n  const onChange = e => {\n    e.persist();\n    setTip({ ...tip,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, message, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Username: \", patientUsername), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, data.map((item, idx) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: idx,\n    action: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, item._id, \" / \", item.bodytemperature, \" / \", item.heartrate, \" / \", item.bloodpressure, \" / \", item.respiratoryrate, \"  / \", item.visitedDate, \" / \", item.patient))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"send daily motivational tips\"), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, \"Send daily motivational tips to the patient !\")), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"5\",\n    id: \"tip\",\n    name: \"tip\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: sendTip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, \"Send\"))))));\n}\n\nexport default withRouter(DetailPatientInfo);","map":{"version":3,"sources":["/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/nurse/DetailPatientInfo.js"],"names":["React","useState","useEffect","ListGroup","withRouter","axios","Button","Modal","Form","DetailPatientInfo","props","data","setData","screen","setScreen","patientUsername","setPatientUsername","showLoading","setShowLoading","apiUrl","match","params","id","show","setShow","handleClose","handleShow","tip","setTip","message","setMessage","apiUrlForSendingTip","currentUserID","setCurrentUserID","readCookie","fetchData","result","console","log","res","get","undefined","username","e","sendTip","patientId","nurseId","post","then","catch","error","onChange","persist","target","name","value","map","item","idx","_id","bodytemperature","heartrate","bloodpressure","respiratoryrate","visitedDate","patient"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nfunction DetailPatientInfo(props) {\n    const [data, setData] = useState([]);\n    const [screen, setScreen] = useState('auth');\n    const [patientUsername, setPatientUsername] = useState();\n\n    // console.log('props.screen', props.screen);\n\n    const [showLoading, setShowLoading] = useState(false);\n    const apiUrl = \"http://localhost:3000/detailPatientInfo/\" + props.match.params.id;\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [tip, setTip] = useState([]);\n    const [message, setMessage] = useState('');\n    const apiUrlForSendingTip = \"http://localhost:3000/sendTip\";\n    const [currentUserID, setCurrentUserID] = useState('');\n\n    useEffect(() => {\n        readCookie();\n        setShowLoading(false);\n        const fetchData = async () => {\n            const result = await axios(apiUrl);\n            console.log('results from students' + result.data);\n            // setCurrentUser(res.data.id);\n        };\n        fetchData();\n    }, []);\n\n\n    //check if the user already logged-in\n    const readCookie = async () => {\n        try {\n            console.log('--- in readCookie function ---');\n\n            //\n            const res = await axios.get('/read_cookie');\n            // \n            if (res.data.screen !== undefined) {\n                setScreen(res.data.screen);\n                console.log(res.data.screen)\n                console.log(\"username::\" + res.data.username)\n                setPatientUsername(res.data.username)\n                \n                console.log(\"current user id: \", res.data.id);\n                setCurrentUserID(res.data.id);\n            }\n        } catch (e) {\n            setScreen('auth');\n            console.log(e);\n        }\n    };\n\n    const sendTip = () => {\n        const data = {\n            patientId: props.match.params.id,\n            nurseId: currentUserID,\n            tip: tip.tip\n        };\n\n        console.log(\"data >>>>\", data);\n\n        axios.post(apiUrlForSendingTip, data).then((result) => {\n            console.log(\"RESULT >>>> \", result);\n            \n            if (result != null) {\n                setMessage('Your daily motivational tip is successfully sent to this patient !');\n            }\n\n        }).catch((error) => {\n            console.log(\"ERROR!! \", error);\n        });\n\n        // Close modal\n        handleClose();\n    };\n\n    const onChange = (e) => {\n        e.persist();\n        setTip({ ...tip, [e.target.name]: e.target.value });\n    }\n\n    return (\n        <div>\n            {message}\n\n            <h2>Username: {patientUsername}</h2>\n            <ListGroup>\n                {data.map((item, idx) => (\n                    <ListGroup.Item key={idx} action >\n                        {item._id} / {item.bodytemperature} / {item.heartrate} / {item.bloodpressure} / {item.respiratoryrate}  / {item.visitedDate} / {item.patient}\n\n                    </ListGroup.Item>\n                ))}\n            </ListGroup>\n\n\n            <>\n                <Button variant=\"primary\" onClick={handleShow}>send daily motivational tips</Button>\n\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Send daily motivational tips to the patient !</Modal.Title>\n                    </Modal.Header>\n                    <Form>\n                        <Modal.Body>\n                            <Form.Group>\n                                {/* <Form.Label>Example textarea</Form.Label> */}\n                                <Form.Control as=\"textarea\" rows=\"5\" id=\"tip\" name=\"tip\" onChange={onChange}/>\n                            </Form.Group>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n                            <Button variant=\"primary\" onClick={sendTip}>Send</Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </>\n        </div>\n    );\n\n}\n\nexport default withRouter(DetailPatientInfo);"]},"metadata":{},"sourceType":"module"}