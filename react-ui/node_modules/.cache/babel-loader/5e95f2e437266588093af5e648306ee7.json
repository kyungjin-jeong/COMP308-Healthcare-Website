{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/nurse/SearchPatient.js\";\nimport { withRouter } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nfunction SearchPatient(props) {\n  const {\n    screen,\n    setScreen\n  } = props; //check if the user already logged-in\n\n  const readCookie = async () => {\n    try {\n      console.log('--- in readCookie function ---'); //\n\n      const res = await axios.get('/read_cookie'); // \n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  }; //runs the first time the view is rendered\n  //to check if user is signed in\n\n\n  useEffect(() => {\n    readCookie();\n  }, []); //only the first render\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Search Patient: \", screen));\n}\n\nexport default withRouter(SearchPatient);","map":{"version":3,"sources":["/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/nurse/SearchPatient.js"],"names":["withRouter","React","Component","SearchPatient","props","screen","setScreen","readCookie","console","log","res","axios","get","data","undefined","e","useEffect"],"mappings":";AACA,SAASA,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwBF,KAA9B,CAD0B,CAI5B;;AACA,QAAMG,UAAU,GAAG,YAAY;AAC7B,QAAI;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EADE,CAGF;;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,cAAV,CAAlB,CAJE,CAKF;;AACA,UAAIF,GAAG,CAACG,IAAJ,CAASR,MAAT,KAAoBS,SAAxB,EAAmC;AACjCR,QAAAA,SAAS,CAACI,GAAG,CAACG,IAAJ,CAASR,MAAV,CAAT;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACG,IAAJ,CAASR,MAArB;AACD;AACF,KAVD,CAUE,OAAOU,CAAP,EAAU;AACVT,MAAAA,SAAS,CAAC,MAAD,CAAT;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ;AACD;AACF,GAfD,CAL4B,CAqB5B;AACA;;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdT,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT,CAvB4B,CAyBpB;;AAEN,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqBF,MAArB,CADJ,CADJ;AAMH;;AAED,eAAeL,UAAU,CAACG,aAAD,CAAzB","sourcesContent":["\nimport { withRouter } from 'react-router-dom';\n\nimport React, { Component } from 'react';\n\nfunction SearchPatient(props) {\n    const { screen, setScreen } = props;\n\n\n  //check if the user already logged-in\n  const readCookie = async () => {\n    try {\n      console.log('--- in readCookie function ---');\n\n      //\n      const res = await axios.get('/read_cookie');\n      // \n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen)\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  };\n  //runs the first time the view is rendered\n  //to check if user is signed in\n  useEffect(() => {\n    readCookie();\n  }, []); //only the first render\n  \n    return (\n        <div>\n            <h2>Search Patient: {screen}</h2>\n        </div>\n    );\n\n}\n\nexport default withRouter(SearchPatient);"]},"metadata":{},"sourceType":"module"}