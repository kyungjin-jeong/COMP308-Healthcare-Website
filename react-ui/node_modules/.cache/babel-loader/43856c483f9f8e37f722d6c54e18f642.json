{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/nurse/SearchPatient.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Home from '../Home';\n\nfunction SearchPatient(props) {\n  const [screen, setScreen] = useState('auth');\n  const [showLoading, setShowLoading] = useState(false); //check if the user already logged-in\n\n  const readCookie = async () => {\n    try {\n      console.log('--- in readCookie function ---'); //\n\n      const res = await axios.get('/read_cookie'); // \n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  }; //runs the first time the view is rendered\n  //to check if user is signed in\n\n\n  useEffect(() => {\n    readCookie();\n  }, []); //only the first render\n\n  const searchPatient = e => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, showLoading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Loading...\")), screen === auth ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Search Patient: \", screen), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: searchPatient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"searchType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dateOfBirth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, \"Date Of Birth\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"searchStr\",\n    id: \"searchStr\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"Search\"))) : /*#__PURE__*/React.createElement(Home, {\n    screen: screen,\n    setScreen: setScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }));\n}\n\nexport default withRouter(SearchPatient);","map":{"version":3,"sources":["/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/nurse/SearchPatient.js"],"names":["React","useState","useEffect","withRouter","axios","Spinner","Home","SearchPatient","props","screen","setScreen","showLoading","setShowLoading","readCookie","console","log","res","get","data","undefined","e","searchPatient","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport Home from '../Home';\n\nfunction SearchPatient(props) {\n    const [screen, setScreen] = useState('auth');\n    const [showLoading, setShowLoading] = useState(false);\n\n    //check if the user already logged-in\n    const readCookie = async () => {\n        try {\n            console.log('--- in readCookie function ---');\n\n            //\n            const res = await axios.get('/read_cookie');\n            // \n            if (res.data.screen !== undefined) {\n                setScreen(res.data.screen);\n                console.log(res.data.screen)\n            }\n        } catch (e) {\n            setScreen('auth');\n            console.log(e);\n        }\n    };\n    //runs the first time the view is rendered\n    //to check if user is signed in\n    useEffect(() => {\n        readCookie();\n    }, []); //only the first render\n\n\n    const searchPatient = (e) => {\n    };\n\n    return (\n        <div>\n            {showLoading &&\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            }\n\n            {screen === auth\n                ?\n                <div>\n                    <h2>Search Patient: {screen}</h2>\n\n                    <form onSubmit={searchPatient}>\n\n                        <select id=\"searchType\">\n                            <option value=\"id\">ID</option>\n                            <option value=\"firstName\">First Name</option>\n                            <option value=\"lastName\">Last Name</option>\n                            <option value=\"email\">Email Address</option>\n                            <option value=\"dateOfBirth\">Date Of Birth</option>\n                        </select>\n\n                        <input type=\"text\" name=\"searchStr\" id=\"searchStr\" value=\"\" />\n                        <button type=\"submit\">Search</button>\n                    </form>\n                </div>\n\n                : <Home screen={screen} setScreen={setScreen} />\n            }\n\n\n        </div>\n    );\n\n}\n\nexport default withRouter(SearchPatient);"]},"metadata":{},"sourceType":"module"}