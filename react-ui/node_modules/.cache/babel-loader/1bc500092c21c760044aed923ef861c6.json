{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\tb\\\\COMP308-Healthcare-Website\\\\react-ui\\\\src\\\\components\\\\nurse\\\\InsertPatientVital.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { withRouter } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport '../Registration.css';\n\nfunction InsertPatientVital(props) {\n  const [vital, setVital] = useState({\n    bodytemperature: '',\n    heartrate: '',\n    bloodpressure: '',\n    respiratoryrate: '',\n    visitedDate: ''\n  });\n  const [valid, setValidation] = useState({\n    isDateValid: false\n  });\n  const [screen, setScreen] = useState('auth');\n  const [patientUsername, setPatientUsername] = useState();\n  console.log('props.screen', props.screen); //check if the user already logged-in\n\n  const readCookie = async () => {\n    try {\n      console.log('--- in readCookie function ---'); //\n\n      const res = await axios.get('/read_cookie'); // \n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n        console.log(\"username::\" + res.data.username);\n        setPatientUsername(props.match.params.id);\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  }; //runs the first time the view is rendered\n  //to check if user is signed in\n\n\n  useEffect(() => {\n    readCookie();\n  }, []); //only the first render\n\n  const [showLoading, setShowLoading] = useState(false);\n  const apiUrl = \"http://localhost:3000/savePatientVital\";\n\n  const saveUser = e => {\n    setShowLoading(true);\n    console.log(\">>>test id :::\" + props.match.params.id);\n    e.preventDefault();\n    const data = {\n      patientUsername: patientUsername,\n      bodytemperature: vital.bodytemperature,\n      heartrate: vital.heartrate,\n      bloodpressure: vital.bloodpressure,\n      respiratoryrate: vital.respiratoryrate,\n      visitedDate: vital.visitedDate\n    };\n    axios.post(apiUrl, data).then(result => {\n      setShowLoading(false);\n      console.log(\"what is>>>\" + result.data._id); // passing patient Id\n\n      props.history.push('/detailPatientInfo/' + props.match.params.id);\n    }).catch(error => setShowLoading(false));\n  };\n\n  const onChange = e => {\n    //e.persist();\n    console.log(e.target.value);\n    setVital({ ...vital,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validateDate = e => {\n    const dateNumberRegExp = /^\\d{4}-\\d{2}-\\d{2}$/;\n    console.log(e.target.value);\n\n    if (e.target.value.match(dateNumberRegExp)) {\n      setValidation({\n        isDateValid: true\n      });\n    } else {\n      setValidation({\n        isDateValid: false\n      });\n    }\n\n    setVital({ ...vital,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const isEnteredDateValid = () => {\n    if (vital.visitedDate) return valid.isDateValid;\n  };\n\n  const inputClassNameHelper = boolean => {\n    switch (boolean) {\n      case true:\n        return 'is-valid';\n\n      case false:\n        return 'is-invalid';\n\n      default:\n        return '';\n    }\n  };\n\n  const goback = id => {\n    console.log(\"check user id: \" + id);\n    props.history.push({\n      pathname: '/detailPatientInfo/' + id\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, showLoading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, \"Loading...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, \" Register a New Vital Signs\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"signUpForm\",\n    onSubmit: saveUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, \"Body Temperature\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    id: \"bodytemperature\",\n    name: \"bodytemperature\",\n    placeholder: \"Only number is available\",\n    value: vital.bodytemperature,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, \"Heart Rate\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    id: \"heartrate\",\n    name: \"heartrate\",\n    placeholder: \"Only number is available\",\n    value: vital.heartrate,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }, \"Body pressure\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    id: \"bodypressure\",\n    name: \"bodypressure\",\n    placeholder: \"Only number is available\",\n    value: vital.bodypressure,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  }, \"Respiratory Rate\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"respiratoryrate\",\n    name: \"respiratoryrate\",\n    placeholder: \"Only number is available\",\n    value: vital.respiratoryrate,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, \"Visited Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control ${inputClassNameHelper(isEnteredDateValid())}`,\n    id: \"visitedDate\",\n    name: \"visitedDate\",\n    placeholder: \"yyyy-mm-dd\",\n    value: vital.visitedDate,\n    onChange: validateDate,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-info btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success btn-block \",\n    onClick: () => {\n      goback(patientUsername);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, \"Cancel\"))));\n}\n\nexport default withRouter(InsertPatientVital);","map":{"version":3,"sources":["C:/Users/HP/Documents/GitHub/tb/COMP308-Healthcare-Website/react-ui/src/components/nurse/InsertPatientVital.js"],"names":["React","useState","useEffect","axios","Spinner","withRouter","Button","InsertPatientVital","props","vital","setVital","bodytemperature","heartrate","bloodpressure","respiratoryrate","visitedDate","valid","setValidation","isDateValid","screen","setScreen","patientUsername","setPatientUsername","console","log","readCookie","res","get","data","undefined","username","match","params","id","e","showLoading","setShowLoading","apiUrl","saveUser","preventDefault","post","then","result","_id","history","push","catch","error","onChange","target","value","name","validateDate","dateNumberRegExp","isEnteredDateValid","inputClassNameHelper","boolean","goback","pathname","bodypressure"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport '../Registration.css'\r\n\r\n\r\nfunction InsertPatientVital(props) {\r\n    const [vital, setVital]\r\n        = useState({\r\n            bodytemperature: '',\r\n            heartrate: '',\r\n            bloodpressure: '',\r\n            respiratoryrate: '',\r\n            visitedDate: ''\r\n        });\r\n\r\n\r\n    const [valid, setValidation]\r\n        = useState({\r\n            isDateValid: false\r\n        });\r\n\r\n    const [screen, setScreen] = useState('auth');\r\n    const [patientUsername, setPatientUsername] = useState();\r\n\r\n    console.log('props.screen', props.screen);\r\n    //check if the user already logged-in\r\n    const readCookie = async () => {\r\n        try {\r\n            console.log('--- in readCookie function ---');\r\n\r\n            //\r\n            const res = await axios.get('/read_cookie');\r\n            // \r\n            if (res.data.screen !== undefined) {\r\n                setScreen(res.data.screen);\r\n                console.log(res.data.screen)\r\n                console.log(\"username::\" + res.data.username)\r\n                setPatientUsername(props.match.params.id)\r\n            }\r\n        } catch (e) {\r\n            setScreen('auth');\r\n            console.log(e);\r\n        }\r\n    };\r\n    //runs the first time the view is rendered\r\n    //to check if user is signed in\r\n    useEffect(() => {\r\n        readCookie();\r\n    }, []); //only the first render\r\n\r\n    const [showLoading, setShowLoading] = useState(false);\r\n    const apiUrl = \"http://localhost:3000/savePatientVital\";\r\n\r\n    const saveUser = (e) => {\r\n        setShowLoading(true);\r\n        console.log(\">>>test id :::\" + props.match.params.id)\r\n        e.preventDefault();\r\n        const data = {\r\n            patientUsername: patientUsername,\r\n            bodytemperature: vital.bodytemperature,\r\n            heartrate: vital.heartrate,\r\n            bloodpressure: vital.bloodpressure,\r\n            respiratoryrate: vital.respiratoryrate,\r\n            visitedDate: vital.visitedDate\r\n        };\r\n\r\n        axios.post(apiUrl, data)\r\n            .then((result) => {\r\n                setShowLoading(false);\r\n                console.log(\"what is>>>\" + result.data._id) // passing patient Id\r\n                props.history.push('/detailPatientInfo/' + props.match.params.id)\r\n\r\n            }).catch((error) => setShowLoading(false));\r\n\r\n    };\r\n\r\n\r\n\r\n    const onChange = (e) => {\r\n        //e.persist();\r\n        console.log(e.target.value)\r\n        setVital({ ...vital, [e.target.name]: e.target.value });\r\n    }\r\n    const validateDate = (e) => {\r\n        const dateNumberRegExp = /^\\d{4}-\\d{2}-\\d{2}$/;\r\n        console.log(e.target.value)\r\n        if (e.target.value.match(dateNumberRegExp)) {\r\n            setValidation({ isDateValid: true })\r\n        } else {\r\n            setValidation({ isDateValid: false })\r\n        }\r\n        setVital({ ...vital, [e.target.name]: e.target.value });\r\n    };\r\n\r\n        const isEnteredDateValid = () => { if (vital.visitedDate) return valid.isDateValid;};\r\n\r\n        const inputClassNameHelper = boolean => {\r\n            switch (boolean) {\r\n                case true:\r\n                    return 'is-valid';\r\n                case false:\r\n                    return 'is-invalid';\r\n                default:\r\n                    return '';\r\n            }\r\n        };\r\n\r\n        const goback = (id) => {\r\n            console.log(\"check user id: \" + id);\r\n            props.history.push({\r\n                pathname: '/detailPatientInfo/' + id\r\n            });\r\n        };\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                {showLoading &&\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                }\r\n\r\n                <div className=\"App\">\r\n                    <br></br>\r\n                    <h2> Register a New Vital Signs</h2>\r\n\r\n\r\n                    <form className=\"signUpForm\" onSubmit={saveUser}>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"name\">Body Temperature</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                id=\"bodytemperature\"\r\n                                name=\"bodytemperature\"\r\n                                placeholder=\"Only number is available\"\r\n                                value={vital.bodytemperature}\r\n                                onChange={onChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"name\">Heart Rate</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                id=\"heartrate\"\r\n                                name=\"heartrate\"\r\n                                placeholder=\"Only number is available\"\r\n                                value={vital.heartrate}\r\n                                onChange={onChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"name\">Body pressure</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                id=\"bodypressure\"\r\n                                name=\"bodypressure\"\r\n                                placeholder=\"Only number is available\"\r\n                                value={vital.bodypressure}\r\n                                onChange={onChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"name\">Respiratory Rate</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"respiratoryrate\"\r\n                                name=\"respiratoryrate\"\r\n                                placeholder=\"Only number is available\"\r\n                                value={vital.respiratoryrate}\r\n                                onChange={onChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"emailInput\">Visited Date</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className={`form-control ${inputClassNameHelper(isEnteredDateValid())}`}\r\n                                id=\"visitedDate\"\r\n                                name=\"visitedDate\"\r\n                                placeholder=\"yyyy-mm-dd\"\r\n                                value={vital.visitedDate}\r\n                                onChange={validateDate}\r\n                                required\r\n\r\n                            />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-info btn-block\">\r\n                            Submit\r\n                        </button>\r\n                        <button className=\"btn btn-success btn-block \" onClick={() => { goback(patientUsername) }}>\r\n                            Cancel\r\n                        </button>\r\n\r\n                    </form>\r\n  \r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default withRouter(InsertPatientVital);\r\n"]},"metadata":{},"sourceType":"module"}