{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\tb\\\\COMP308-Healthcare-Website\\\\react-ui\\\\src\\\\components\\\\Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\nfunction Login(props) {\n  //state variable for the screen, admin or user\n  const [screen, setScreen] = useState('auth'); //store input field data, user name and password\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const apiUrl = \"http://localhost:3000/signin\"; //send email and password to the server\n  // for initial authentication\n\n  const auth = async () => {\n    console.log('calling auth');\n    console.log(email);\n\n    try {\n      //make a get request to /authenticate end-point on the server\n      const loginData = {\n        auth: {\n          email,\n          password\n        }\n      }; //call api\n\n      const res = await axios.post(apiUrl, loginData);\n      console.log(\"id:\" + res.data.id);\n      console.log(\"email:\" + res.data.email);\n      console.log(res.data.screen); //process the response\n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        setEmail(res.data.email);\n        console.log(\"test>>>>>\" + res.data.screen);\n        props.history.push('/home' + email);\n        window.location.reload(false);\n      }\n    } catch (e) {\n      //print the error\n      console.log(e);\n    }\n  }; //check if the user already logged-in\n\n\n  const readCookie = async () => {\n    try {\n      console.log('--- in readCookie function ---'); //\n\n      const res = await axios.get('/read_cookie'); // \n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  }; //runs the first time the view is rendered\n  //to check if user is signed in\n\n\n  useEffect(() => {\n    readCookie();\n  }, []); //only the first render\n\n  const register = () => {\n    props.history.push({\n      pathname: '/registration'\n    });\n  }; //\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"LoginForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, screen === 'auth' ? /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Email\",\n    type: \"text\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"ButtonSpace\",\n    variant: \"primary\",\n    onClick: auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"ButtonSpace\",\n    variant: \"success\",\n    onClick: () => {\n      register();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Regester\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, screen === 'nurse' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["C:/Users/HP/Documents/GitHub/tb/COMP308-Healthcare-Website/react-ui/src/components/Login.js"],"names":["React","useState","useEffect","Form","Button","axios","withRouter","Login","props","screen","setScreen","email","setEmail","password","setPassword","apiUrl","auth","console","log","loginData","res","post","data","id","undefined","history","push","window","location","reload","e","readCookie","get","register","pathname","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction Login(props) {\r\n  //state variable for the screen, admin or user\r\n  const [screen, setScreen] = useState('auth');\r\n  //store input field data, user name and password\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const apiUrl = \"http://localhost:3000/signin\";\r\n  //send email and password to the server\r\n  // for initial authentication\r\n  const auth = async () => {\r\n    console.log('calling auth')\r\n    console.log(email)\r\n    try {\r\n      //make a get request to /authenticate end-point on the server\r\n      const loginData = { auth: { email, password } }\r\n      //call api\r\n      const res = await axios.post(apiUrl, loginData);\r\n      console.log(\"id:\"+res.data.id)\r\n      console.log(\"email:\"+res.data.email)\r\n\r\n      console.log(res.data.screen)\r\n      //process the response\r\n      if (res.data.screen !== undefined) {\r\n        setScreen(res.data.screen);\r\n        setEmail(res.data.email)\r\n        console.log(\"test>>>>>\"+res.data.screen);\r\n\r\n        props.history.push('/home' + email);\r\n        window.location.reload(false);\r\n      }\r\n    } catch (e) { //print the error\r\n      console.log(e);\r\n    }\r\n    \r\n  };\r\n\r\n  //check if the user already logged-in\r\n  const readCookie = async () => {\r\n    try {\r\n      console.log('--- in readCookie function ---');\r\n\r\n      //\r\n      const res = await axios.get('/read_cookie');\r\n      // \r\n      if (res.data.screen !== undefined) {\r\n        setScreen(res.data.screen);\r\n        console.log(res.data.screen)\r\n      }\r\n    } catch (e) {\r\n      setScreen('auth');\r\n      console.log(e);\r\n    }\r\n  };\r\n  //runs the first time the view is rendered\r\n  //to check if user is signed in\r\n  useEffect(() => {\r\n    readCookie();\r\n  }, []); //only the first render\r\n\r\n  const register = () => {\r\n    props.history.push({\r\n      pathname: '/registration'\r\n    });\r\n  }\r\n\r\n  //\r\n  return (\r\n    <div>\r\n      <br /><br />\r\n      <div className=\"LoginForm\">\r\n        {screen === 'auth'\r\n          ?\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" placeholder=\"Email\" type=\"text\" onChange={e => setEmail(e.target.value)} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\r\n            </Form.Group>\r\n            <div className=\"Buttons\">\r\n              <Button className=\"ButtonSpace\" variant=\"primary\" onClick={auth}>Login</Button>\r\n              <Button className=\"ButtonSpace\" variant=\"success\" onClick={() => { register() }}>Regester</Button>\r\n            </div>\r\n          </Form>\r\n\r\n          : \r\n          <div>\r\n            {screen === 'nurse'\r\n            ?\r\n            <div></div>\r\n            : <div>\r\n          <View/>\r\n            </div>\r\n          }\r\n\r\n          </div>\r\n\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n\r\n"]},"metadata":{},"sourceType":"module"}