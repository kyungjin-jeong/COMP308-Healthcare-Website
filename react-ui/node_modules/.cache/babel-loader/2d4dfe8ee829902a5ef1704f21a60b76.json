{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/nurse/SearchPatient.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Home from '../Home';\n\nfunction SearchPatient(props) {\n  const [screen, setScreen] = useState('auth');\n  const [showLoading, setShowLoading] = useState(false);\n  const apiUrl = \"http://localhost:3000/searchPatient\";\n  const [search, setSearch] = useState({\n    type: '',\n    str: ''\n  });\n  const [result, setResult] = useState([]); //check if the user already logged-in\n\n  const readCookie = async () => {\n    try {\n      console.log('--- in readCookie function ---'); //\n\n      const res = await axios.get('/read_cookie'); // \n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  }; //runs the first time the view is rendered\n  //to check if user is signed in\n\n\n  useEffect(() => {\n    readCookie();\n  }, []); //only the first render\n\n  const searchPatient = e => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = {\n      type: search.type,\n      str: search.str\n    };\n    console.log(\"data >>>>>>>>>> \", data);\n    axios.get(apiUrl, data).then(result => {\n      setShowLoading(false);\n      console.log('result.data:', result.data); //check if the user has logged in\n\n      if (result.data.screen !== 'auth') {\n        console.log('data in if:', result.data);\n        setResult(result.data);\n        setShowLoading(false);\n      }\n    }).catch(error => setShowLoading(false));\n  };\n\n  const onChange = e => {\n    e.persist();\n    setSearch({ ...search,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, showLoading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Loading...\")), screen === 'auth' ? /*#__PURE__*/React.createElement(Home, {\n    screen: screen,\n    setScreen: setScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Search Patient: \", screen), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: searchPatient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"type\",\n    name: \"type\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dateOfBirth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, \"Date Of Birth\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"str\",\n    name: \"str\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"Search\"))));\n}\n\nexport default withRouter(SearchPatient);","map":{"version":3,"sources":["/Users/kyungjin/COMP308-Healthcare-Website/react-ui/src/components/nurse/SearchPatient.js"],"names":["React","useState","useEffect","withRouter","axios","Spinner","Home","SearchPatient","props","screen","setScreen","showLoading","setShowLoading","apiUrl","search","setSearch","type","str","result","setResult","readCookie","console","log","res","get","data","undefined","e","searchPatient","preventDefault","then","catch","error","onChange","persist","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport Home from '../Home';\n\nfunction SearchPatient(props) {\n    const [screen, setScreen] = useState('auth');\n    const [showLoading, setShowLoading] = useState(false);\n    const apiUrl = \"http://localhost:3000/searchPatient\";\n    const [search, setSearch] = useState({\n       type: '',\n       str: '' \n    });\n    const [result, setResult] = useState([]);\n\n    //check if the user already logged-in\n    const readCookie = async () => {\n        try {\n            console.log('--- in readCookie function ---');\n\n            //\n            const res = await axios.get('/read_cookie');\n            // \n            if (res.data.screen !== undefined) {\n                setScreen(res.data.screen);\n                console.log(res.data.screen)\n            }\n        } catch (e) {\n            setScreen('auth');\n            console.log(e);\n        }\n    };\n    //runs the first time the view is rendered\n    //to check if user is signed in\n    useEffect(() => {\n        readCookie();\n    }, []); //only the first render\n\n\n    const searchPatient = (e) => {\n        setShowLoading(true);\n        e.preventDefault();\n        const data = {\n            type: search.type,\n            str: search.str\n        };\n        console.log(\"data >>>>>>>>>> \", data);\n\n        axios.get(apiUrl, data).then((result) => {\n            setShowLoading(false);\n\n            console.log('result.data:',result.data)\n            //check if the user has logged in\n            if(result.data.screen !== 'auth')\n            {              \n              console.log('data in if:', result.data )\n              setResult(result.data);\n              setShowLoading(false);\n            }\n\n        }).catch((error) => setShowLoading(false));\n    };\n\n    const onChange = (e) => {\n        e.persist();\n        setSearch({...search, [e.target.name]: e.target.value});\n      }\n\n    return (\n        <div>\n            {showLoading &&\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            }\n\n            {screen === 'auth'\n                ?\n                <Home screen={screen} setScreen={setScreen} />\n                : \n                <div>\n                    <h2>Search Patient: {screen}</h2>\n\n                    <form onSubmit={searchPatient}>\n\n                        <select id=\"type\" name=\"type\" onChange={onChange}>\n                            <option value=\"id\">ID</option>\n                            <option value=\"firstName\">First Name</option>\n                            <option value=\"lastName\">Last Name</option>\n                            <option value=\"email\">Email Address</option>\n                            <option value=\"dateOfBirth\">Date Of Birth</option>\n                        </select>\n\n                        <input type=\"text\" id=\"str\" name=\"str\" onChange={onChange}/>\n                        \n                        <button type=\"submit\">Search</button>\n                    </form>\n                </div>\n            }\n\n\n        </div>\n    );\n\n}\n\nexport default withRouter(SearchPatient);"]},"metadata":{},"sourceType":"module"}